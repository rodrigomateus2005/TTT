interface RetornoEstoque {
    Estoque: number;
    EstoqueCaixa: number;
    EstoqueAnterior: number;
    PrecoCusto: number;
    PrecoVenda: number;
    Unidade: string;
}
declare class M_SaiEst extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Movimentacao> {
    private verifica;
    private listaLote;
    Itens: SiSMoura.Core.Entity.ItemMovimentacao[];
    Item: SiSMoura.Core.Entity.ItemMovimentacao;
    readonly dlgLote: MouraModalLoteJS;
    readonly dlgProdRepetido: MouraModal;
    readonly dlgTransferencia: MouraModal;
    LotesInformados: QtdeLoteInformadoJS[];
    readonly txtProduto: MouraTextBoxProcura;
    readonly txtSugestao: MouraTextBoxProcuraComLista;
    readonly txtMovimentacao: MouraTextBoxProcura;
    readonly txtResponsavel: MouraTextBoxProcura;
    readonly txtDocumento: MouraTextBox;
    readonly txtObservacao: MouraTextBox;
    readonly cboDeposito: MouraComboBox;
    readonly cboEmpresa: MouraComboBox;
    readonly cboMotivo: MouraComboBox;
    readonly cboDepositoTransferencia: MouraComboBox;
    readonly cboMotivoTransferencia: MouraComboBox;
    readonly lblEstoque: MouraLabel;
    readonly lblCaixa: MouraLabel;
    readonly lblEstoqueAnterior: MouraLabel;
    readonly lblPrecoCusto: MouraLabel;
    readonly lblMediaPrecoVenda: MouraLabel;
    readonly lblUnidade: MouraLabel;
    readonly btnTransferencia: MouraButton;
    readonly btnTicket: MouraButton;
    readonly btnCancelarTransferencia: MouraButton;
    readonly btnOkTransferencia: MouraButton;
    readonly btnSomar: MouraButton;
    readonly btnAlterar: MouraButton;
    readonly btnCancelar: MouraButton;
    readonly Grid: MouraGridViewJSEditavel;
    readonly mdValoresDesag: MouraModal;
    readonly grdSubDesag: MouraGridViewJS;
    readonly lblTotalQtd: MouraLabel;
    readonly lblTotalPeso: MouraLabel;
    readonly lblTotalMedia: MouraLabel;
    readonly lblTotalCusto: MouraLabel;
    protected Init(): void;
    OnPageLoad(): void;
    private GetVisibilidadeSugestao;
    protected Limpar(): void;
    private LimparCampos;
    private LimparCamposItens;
    private ProcurouMovimento;
    protected OnDepoisBuscarExistente(Entity: SiSMoura.Core.Entity.Movimentacao): void;
    private atualizarLabelEstoque;
    protected OnTextBoxProdutoProcurou(): void;
    protected OnComboDepositoSelectedIndexChanged(s: any, e: DevExpress.Web.Scripts.ASPxClientEventArgs): void;
    protected OnComboEmpresaSelectedIndexChanged(s: any, e: MouraEventArgs): void;
    private PreencherComboDeposito;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Movimentacao): void;
    protected criarEntidadePersonalizados(Entidade: SiSMoura.Core.Entity.Movimentacao): void;
    private IsProdutoLote;
    private CarregarItensMovimentacao;
    private ObterDadosEspecificosProduto;
    private VerificaCamposItem;
    private VerificaObrigatoriedadeCampos;
    private OnComboMotivoSelectedIndexChanged;
    private ObterMovDescPorCodigo;
    private SomarQtdeProduto;
    private AlterarQtdeProduto;
    private OnClickSomar;
    private OnClickAlterar;
    private OnClickCancelar;
    private VerificaProdutoRepetido;
    private motivo;
    private AdicionarItem;
    protected OnAntesGravar(): boolean;
    private PreencherItens;
    private PreencherSugestoes;
    private OnClickTicket;
    private ImprimirTicket;
    private AbrirModalLote;
    private OnInformouLoteProduto;
    private CarregarListaLoteProduto;
    private GetLotesExtenso;
    private OnCancelarClick;
    private OnClickTransferencia;
    private OnClickOkTransferencia;
    private itemClicado;
    protected OnClicouBotaoLinhaProduto(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    private OnCellPrepared;
    protected OnCancelarDesagClick(): void;
    protected OnClickConcluirDesag(): void;
    protected VerificarDesagregacao(Produto_Codigo: number): SiSMoura.Core.Entity.Produto_Desagregacao;
    protected CarregarDesagregacao(item: SiSMoura.Core.Entity.ItemMovimentacao): boolean;
    protected CalcularSubprodutos(item: SiSMoura.Core.Entity.ItemMovimentacao): boolean;
    protected OnEditouItemProduto(s: any, e: any): void;
    protected OnVerificarSomaQuantidade(produto: SiSMoura.Core.Entity.ItemMovimentacao): boolean;
}
declare var m_SaiEst: M_SaiEst;
//# sourceMappingURL=M_SaiEst.d.ts.map