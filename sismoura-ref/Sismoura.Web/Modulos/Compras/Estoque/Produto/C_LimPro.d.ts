declare class C_LimPro extends MouraPageAngular {
    readonly gridProdutos: MouraGridViewJSEditavel;
    readonly gridModal: MouraGridViewJSEditavel;
    readonly btnImportar: MouraButton;
    readonly btnVoltar: MouraButton;
    readonly btnAtualizar: MouraButton;
    readonly btnGerar: MouraButton;
    readonly btnGravar: MouraButton;
    readonly btnLimpar: MouraButton;
    readonly btnAlterar: MouraButton;
    readonly txtProduto: MouraTextBoxProcura;
    readonly txtGrupo: MouraTextBoxProcura;
    readonly txtMarca: MouraTextBoxProcura;
    readonly txtModelo: MouraTextBoxProcura;
    readonly txtFornecedor: MouraTextBoxProcura;
    readonly txtCor: MouraTextBoxProcura;
    readonly txtLinha: MouraTextBoxProcura;
    readonly txtQuantidadPermitida: MouraTextBox;
    readonly txtDescricao: MouraTextBox;
    readonly txtReferencia: MouraTextBox;
    readonly txtQtdeMaxima: MouraTextBox;
    readonly mdProdutos: MouraModal;
    readonly cboOperacao: MouraComboBox;
    readonly cboMarcado: MouraComboBox;
    Entity: SiSMoura.Core.Entity.Produto_Quantidade_Maxima_Permitida;
    Produtos: any[];
    Selecionados: number[];
    ngMdProdutos: any[];
    ngMdProduto: any;
    protected Init(): void;
    OnPageLoad(): void;
    protected PreencherGradeModal(): void;
    protected PreencherGradeProdutos(): void;
    protected OnClickbtnImportar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickbtnGerar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickbtnAtualizar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickbtnVoltar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickbtnGravar(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected OnClickbtnLimpar(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected OnClickbtnAlterar(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected AlterarQuantidadeMaxima(selecionados: any): void;
    private Gravar;
    protected OnProcurouProduto(): void;
    protected ValidarCampos(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    protected OnExcluiuProduto(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected ValidarBotaoGravar(): boolean;
    protected ValidarBotaoAlterar(): boolean;
    protected limparModal(): void;
    protected LimparCampos(): void;
    protected OnAlterouQuantidade(): void;
}
declare const c_LimPro: C_LimPro;
//# sourceMappingURL=C_LimPro.d.ts.map