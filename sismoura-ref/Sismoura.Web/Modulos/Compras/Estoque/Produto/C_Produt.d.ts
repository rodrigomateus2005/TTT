interface IConfigGravarProduto {
    PerguntouCodigoBarra: boolean;
}
interface ProdutoiMendes {
    id: number;
    ean: string;
    cod: number;
    descricao: string;
    vVenda: number;
    codIMendes: number;
}
interface Grade {
    Descricao: string;
    Referencia: string;
    Cod_Barra: string;
    Grade: number;
    Cor: number[];
    Produto: SiSMoura.Core.Entity.Produto;
    Produtos: SiSMoura.Core.Entity.Produto[];
}
interface ProdutoGrade {
    Codigo: number;
    Descricao: string;
    Cor: number;
    Tamanho: string;
    Cod_Barra: string;
    Referencia: string;
}
declare class C_Produt extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Produto> {
    private PATH_DOCUMENTOS;
    private produtoiMendes;
    Duns14: SiSMoura.Core.Entity.Produto_Barra_Dun14[];
    Dun14: SiSMoura.Core.Entity.Produto_Barra_Dun14;
    Fornecedores: SiSMoura.Core.Entity.ProdutoFornecedorRetorno[];
    Fornecedor: SiSMoura.Core.Entity.ProdutoFornecedorRetorno;
    Fracionados: any[];
    Similares: SiSMoura.Core.Entity.ProdutoSimilarRetorno[];
    readonly txtCodigo: MouraTextBoxProcura;
    readonly optPagamento: MouraRadioButtonList;
    readonly cboTaxa_IVA: MouraComboBox;
    readonly cboMotivoIsencao: MouraComboBox;
    readonly agpIVA: MouraAgrupamento;
    readonly txtCodigoBarras: MouraTextBox;
    readonly lblProdutoEcommerce: MouraLabel;
    readonly cboEmpresaFornecedor: MouraComboBoxEmpresa;
    readonly fotosProduto: MouraFotosPastaJS;
    readonly PathFotos: string;
    readonly chkProdutoBalanca: MouraCheckBox;
    readonly chkSelfService: MouraCheckBox;
    readonly chkProdutoImportado: MouraCheckBox;
    readonly GridFornecedor: MouraGridViewJSEditavel;
    readonly txtPrecoCusto: MouraTextBox;
    readonly lblCustoSemImposto: MouraLabel;
    readonly lblCustoEntrada: MouraLabel;
    readonly lblDataCadastro: MouraLabel;
    readonly lblDataAlteracao: MouraLabel;
    readonly txtMarkup_P: MouraTextBox;
    readonly txtPrecoVenda: MouraTextBox;
    readonly txtQtdEmbalagem: MouraTextBox;
    readonly txtFatorCusto: MouraTextBox;
    readonly txtPrecoPorcentagem: MouraTextBox;
    CampoAtualizar: string;
    ConfiguracoesGravarProduto: IConfigGravarProduto;
    readonly mdFarmarcia: MouraModal;
    readonly cboLaboratorio: DevExpress.Web.Scripts.ASPxClientComboBox;
    readonly mdManipulacao: MouraModal;
    readonly txtDiluicao: MouraTextBox;
    CotacaoDolar: number;
    readonly txtPrecoDolar: MouraTextBox;
    readonly txtMargemReal: MouraTextBox;
    readonly mdImportarDados: MouraModal;
    readonly txtProdutoImportar: MouraTextBoxProcura;
    readonly txtFornecedor: MouraTextBoxProcura;
    readonly mdInfExtraBalanca: MouraModal;
    readonly btnOkInfExtra: MouraButton;
    readonly btnInfBalanca: MouraButton;
    readonly txtInfExtra1: MouraTextBox;
    readonly txtInfExtra2: MouraTextBox;
    readonly txtInfExtra3: MouraTextBox;
    readonly txtInfExtra4: MouraTextBox;
    readonly txtInfExtra5: MouraTextBox;
    readonly txtProdutoSimilar: MouraTextBoxProcura;
    readonly chkA1: MouraCheckBox;
    readonly chkA2: MouraCheckBox;
    readonly chkA3: MouraCheckBox;
    readonly chkB1: MouraCheckBox;
    readonly chkB2: MouraCheckBox;
    readonly chkC1: MouraCheckBox;
    readonly chkC2: MouraCheckBox;
    readonly chkC3: MouraCheckBox;
    readonly chkC4: MouraCheckBox;
    readonly chkC5: MouraCheckBox;
    readonly chkBMPO: MouraCheckBox;
    readonly chkBSPO: MouraCheckBox;
    readonly btnMaisInformacoes: MouraButton;
    readonly btnMicrochip_Anilhas: MouraButton;
    readonly chkAnimal_Silvestre: MouraCheckBox;
    readonly btnOKMicrochip: MouraButton;
    readonly btnHistoricoPreco: MouraButton;
    readonly btnConsultarTributacao: MouraButton;
    readonly btnGerarHistoricoPreco: MouraButton;
    readonly cboHistoricoTipo: MouraComboBox;
    readonly cboHistoricoCampoAlterado: MouraComboBox;
    readonly optTipoProdutoCombo: MouraRadioButtonList;
    readonly mdProdutoCombo: MouraModal;
    readonly txtProdutoCombo: MouraTextBoxProcura;
    readonly txtGrupoCombo: MouraTextBoxProcura;
    readonly txtSubgrupoCombo: MouraTextBoxProcura;
    readonly txtQtdeParticipanteDecimal: MouraTextBox;
    readonly txtQtdeParticipanteInteiro: MouraTextBox;
    readonly txtValorCombo: MouraTextBox;
    readonly txtOrdemCombo: MouraTextBox;
    readonly grdGerarProdutoCombo: MouraGridViewJSEditavel;
    readonly btnProdutoCombo: MouraButton;
    Produto_Combo: SiSMoura.Core.Entity.Produto_Combo[];
    Produto_Combo_Item: SiSMoura.Core.Entity.Produto_Combo;
    readonly mdIntegracao: MouraModal;
    readonly GridIntegracao: MouraGridViewJS;
    readonly btnAtualizar: MouraButton;
    readonly btnNaoEncontrados: MouraButton;
    readonly mdHistoricoPreco: MouraModal;
    readonly txtPeriodoHistoricoPreco: MouraTextBoxPeriodo;
    readonly grdHistoricoPreco: MouraGridViewJS;
    readonly btnInativos: MouraButton;
    readonly mdInativosEmpresa: MouraModal;
    readonly txtDescricao: MouraTextBox;
    readonly grdEstoqueMinMax: MouraGridViewJS;
    readonly grdInativosporEmpresas: MouraGridViewJS;
    readonly lblProduto: MouraLabel;
    readonly txtQtdeCaixaFarmacia: MouraTextBox;
    readonly txtPack: MouraTextBox;
    readonly txtValorMaxAprovadoMS: MouraTextBox;
    readonly txtValorUnitarioCaixa: MouraTextBox;
    readonly chkFarmaciaPopular: MouraCheckBox;
    readonly chkGratuidade: MouraCheckBox;
    readonly txtTabelaPreco: MouraTextBox;
    readonly GridPrecos: MouraGridViewJSEditavel;
    readonly GridRegraImposto: MouraGridViewJS;
    DepositoEstoques: SiSMoura.Core.Entity.DepositoEstoqueProdutoRetorno[];
    DepositosEstoquesLimpo: SiSMoura.Core.Entity.DepositoEstoqueProdutoRetorno[];
    readonly chkPermitirUtilizarOrcamento: MouraCheckBox;
    readonly btnOKInativo: MouraButton;
    RegrasLimpo: SiSMoura.Core.Entity.ProdutoRegraImpostoRetorno[];
    EmpresasLimpo: SiSMoura.Core.Entity.ProdutoInativoRetorno[];
    EstoqueEmpresaLimpo: SiSMoura.Core.Entity.ProdutoMinimoEmpresaRetorno[];
    EstoqueMinEmpresas: SiSMoura.Core.Entity.ProdutoMinimoEmpresaRetorno[];
    ListaPrecosLimpo: SiSMoura.Core.Entity.ProdutoPrecoRetorno[];
    ListaPrecos: SiSMoura.Core.Entity.ProdutoPrecoRetorno[];
    RegrasImposto: SiSMoura.Core.Entity.ProdutoRegraImpostoRetorno[];
    readonly GridProdutosSimilares: MouraGridViewJS;
    readonly GridEstoque: MouraGridViewJS;
    readonly btnProdutosSimilares: MouraButton;
    readonly mdSimilares: MouraModal;
    readonly btnOkSimilares: MouraButton;
    readonly btnAdicionarSimilar: MouraButton;
    readonly btnImportarDados: MouraButton;
    readonly btnImportarProduto: MouraButton;
    readonly btnCancelarImportar: MouraButton;
    readonly lstCodigoBarras: MouraListBox;
    readonly btnRemoverCodBarras: MouraButton;
    readonly btnAdicionarCodBarras: MouraButton;
    readonly btnFracionado: MouraButton;
    readonly grdFracionado: MouraGridViewJSEditavel;
    readonly chkFracionado: MouraCheckBox;
    readonly chkVenderSemEstoque: MouraCheckBox;
    readonly txtCodigoBarrasAdicionar: MouraTextBox;
    readonly grdRegraCFOP: MouraGridViewJSEditavel;
    readonly grdRegraFinalidade: MouraGridViewJSEditavel;
    readonly cboEmpresaRegraCFOP: MouraComboBoxEmpresa;
    readonly cboEmpresaRegraFinalidade: MouraComboBoxEmpresa;
    readonly cboRegraImpostoCFOP: MouraComboBox;
    readonly cboFinalidade: MouraComboBox;
    readonly cboRegraImpostoFinalidade: MouraComboBox;
    RegrasCFOP: SiSMoura.Core.Entity.ProdutoRegraImpostoCFOP[];
    RegrasFinalidade: SiSMoura.Core.Entity.Produto_Regra_Imposto_Finalidade[];
    readonly mdCest: MouraModal;
    readonly gridCest: MouraGridViewJS;
    readonly gridDun14: MouraGridViewJSEditavel;
    readonly txtMarca: MouraTextBoxProcura;
    readonly txtNCM: MouraTextBox;
    readonly lblNcmCest: MouraLabel;
    readonly lblInfFoto: MouraLabel;
    readonly btnDrogaria: MouraButton;
    readonly btnOkFarmacia: MouraButton;
    readonly TabFarmacia: MouraTabPanel;
    readonly abaFracionados: MouraTabPage;
    readonly lblCustoABC: MouraLabel;
    readonly lblValorVendaABC: MouraLabel;
    readonly lblNomeABC: MouraLabel;
    readonly btnManipulacao: MouraButton;
    readonly btnOkManipulacao: MouraButton;
    readonly btnAdicionarSinonimo: MouraButton;
    readonly txtSinonimo: MouraTextBox;
    readonly gridSinonimo: MouraGridViewJS;
    readonly tabManipulacao: MouraTabPanel;
    readonly Tab: MouraTabPanel;
    readonly grdMicrochip: MouraGridViewJSEditavel;
    readonly gridExcipiente: MouraGridViewJSEditavel;
    readonly txtExcipiente: MouraTextBoxProcura;
    readonly txtMicrochip: MouraTextBoxProcura;
    readonly cboPrioridade: MouraComboBox;
    Anilhas: SiSMoura.Core.Entity.Animal_Produto_AnilhaRetorno[];
    Excipientes: SiSMoura.Core.Entity.FarmaciaProdutoExcipienteRetorno[];
    readonly mdAnexo: MouraModalAnexo;
    readonly mdAnilha: MouraModal;
    readonly btnDocumentos: MouraButton;
    readonly txtContaContabil: MouraTextBoxProcura;
    readonly lblIMendes1: MouraLabel;
    readonly lblIMendes2: MouraLabel;
    readonly mdCadastroGrade: MouraModal;
    readonly grdMdGrade: MouraGridViewJSEditavel;
    readonly txtMdGradeCor: MouraTextBoxProcuraComLista;
    readonly cboMdGrade: MouraComboBox;
    readonly btnGerarGrade: MouraButton;
    readonly btnMdGradeGravar: MouraButton;
    readonly btnMdGradeFechar: MouraButton;
    Grade: Grade;
    ProdutosGrade: SiSMoura.Core.Entity.Produto[];
    readonly cboCFOP: MouraComboBox;
    readonly AbaNFAdicionais: MouraTabPage;
    readonly AbaNFImpostos: MouraTabPage;
    readonly agpNFImpostos: MouraAgrupamento;
    readonly divNFImpostos: HTMLDivElement;
    readonly divNFAdicionais: HTMLDivElement;
    readonly cboUnidadeProduto: MouraComboBox;
    readonly chkListaPrecos: MouraCheckBox;
    private retorno;
    private produtos;
    protected Init(): void;
    protected OnCheckListaPreco(): void;
    protected OnEditouRegraImposto(s: any, e: any): void;
    protected OnchkAnimal_SilvestreCheckChanged(): void;
    OnPageLoad(): void;
    protected OnAtivouFracionados(): void;
    validarFracionados(): void;
    protected abrirConfigFracionado(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Produto): void;
    protected AtualizarFotosProduto(Entity: SiSMoura.Core.Entity.Produto): void;
    protected OnAntesBuscarExistente(): void;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Produto): void;
    protected OnAntesGravar(): boolean;
    protected ValidarAntesGravar(produto: SiSMoura.Core.Entity.Produto): boolean;
    protected ExecutarGravar(): void;
    protected OnDepoisGravar(): boolean;
    protected PreencherFornecedoresEntity(Entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherRegrasCFOPEntity(Entity: SiSMoura.Core.Entity.Produto): void;
    protected abrirAnilhas(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected gravarAnilhas(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected abrirConsultaPrecos(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickHistoricoPreco(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickProdutoCombo(s: any, e: MouraClickEventArgs): void;
    protected OnClickbtnConsultarTributacao(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickAtualizar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickNaoEncontrados(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected PreencherRetornos(r: any[]): void;
    protected PreencherProdutos(p: any): void;
    protected OnGridIntegracaoCellPrepared(s: any, e: MouraGridViewJSCellPreparedEventArgs): void;
    protected OnClickGerarHistorico(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickInativosPorEmpresa(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected selecionarCheck(atributoAngular: string, valor: boolean): void;
    protected validarDocumento(): void;
    protected OnChkA1CheckChange(): void;
    protected OnChkA2CheckChange(): void;
    protected OnChkA3CheckChange(): void;
    protected OnChkB1CheckChange(): void;
    protected OnChkB2CheckChange(): void;
    protected OnChkC1CheckChange(): void;
    protected OnChkC2CheckChange(): void;
    protected OnChkC3CheckChange(): void;
    protected OnChkC4CheckChange(): void;
    protected OnChkC5CheckChange(): void;
    protected OnEndCallBackModalImportarDados(): void;
    protected OnTextBoxPrecoDolarChange(): void;
    protected OnTextBoxMarkupChange(): void;
    protected OnComboBoxEmpresaFornecedorChange(): void;
    protected OnPesquisouFornecedor(s: MouraTextBoxProcura, e: MouraEventArgs): void;
    protected OnPesquisouContaContabil(s: MouraTextBoxProcura, e: MouraEventArgs): void;
    protected OnTextBoxPrecoCustoChange(): void;
    protected OnTextBoxCodigoBarrasChange(): void;
    protected RespostaAnimalSilvestre(result: MsgBoxResultEventArgs): void;
    protected OnTextBoxPrecoVendaChange(): void;
    private AtualizarValoresProduto;
    private AtualizarValorVenda;
    private AtualizarListaPrecos;
    private AtualizarMarkup;
    private AtualizarMargem;
    private CalcularDolar;
    private CorrigirCamposFarmaciaPopular;
    private CorrigirCamposGratuidade;
    protected OnTextBoxQtdeCaixaFarmaciaChange(): void;
    protected OnTextBoxValorMaxAprovadoMS(): void;
    protected OnTextBoxTabelaPrecoChange(): void;
    protected OnAdicionouFornecedor(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected OnAdicionouRegraCFOP(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected OnAdicionouRegraFinalidade(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected OnValidandoAdicionarDun14(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnValidandoAdicionarFornecedor(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnLimpouItemFornecedor(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected OnValidandoAdicionarRegraCFOP(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnValidandoAdicionarRegraFinalidade(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnLimpouItemRegraCFOP(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected OnLimpouItemRegraFinalidade(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected OnAdicionouExcipiente(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected OnAdicionouAnilha(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected OnValidandoAdicionarExcipiente(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnValidandoAdicionarAnilha(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected LimparGradeEstoques(): void;
    protected LimparGradeInativos(): void;
    protected LimparGradeListaPrecos(): void;
    protected LimparGradeEstoqueMinMax(): void;
    protected LimparGradeRegraImposto(): void;
    protected PreencherGradeRegraImposto(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherGradeListaPrecos(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherGradeEstoqueMinEmpresa(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherListaRegraImposto(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherListaProdutPreco(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherListaEstoque(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherListaEstoqueMinEmpresa(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherGradeInativos(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherGradeFracionados(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherListaInativos(entity: SiSMoura.Core.Entity.Produto): void;
    protected OnClickBotaoOKInativo(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickBotaoExtraBalanca(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickOKInfExtraBalanca(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickBotaoSimilares(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickOKSimilares(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickAdicionarSimilar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected PreencherListaSimilares(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherListaExcipientes(entity: SiSMoura.Core.Entity.Produto): void;
    protected PreencherListaAnilhas(entity: SiSMoura.Core.Entity.Produto): void;
    protected OnClickBotaoImportarDados(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickBotaoCancelarImportarDados(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickBotaoImportarProduto(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoRemoverCodigoBarra(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected IsCodigoBarraValido(codigoBarra: string, entity: SiSMoura.Core.Entity.Produto): string;
    protected OnClickBotaoAdicionarCodigoBarra(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected AtualizarListaCodigosBarra(entity: SiSMoura.Core.Entity.Produto): void;
    protected OnAlterouNCM(s: any, e: any): void;
    protected OnSelecionouCEST(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnAlterouProdutoPreco(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected criarEntidadePersonalizados(Entidade: SiSMoura.Core.Entity.Produto): void;
    protected OnClickBotaoDrogaria(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickOKModalDrogaria(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickBotaoManipulacao(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickOKModalManipulacao(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickAdicionarSinonimo(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected AtualizarGridSinonimos(): void;
    protected OnClickDocumentos(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnSelecionouLinhaGrade(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected VerificaHabilitarBotaoBalanca(Entidade: SiSMoura.Core.Entity.Produto): void;
    protected OnchkProdutoBalancaChange(s: any, e: any): void;
    protected PreencherCampoInformacoesExtraBalanca(Entidade: SiSMoura.Core.Entity.Produto): void;
    protected LimparInfExtraBalanca(): void;
    protected PreencherEntidadeInfExtraBalanca(Entidade: SiSMoura.Core.Entity.Produto): void;
    protected OnRowValidatingGridEstoque(s: any, e: any): void;
    protected AlterarColunaEditavelEstoque(): void;
    protected AlterouControlado(newValue: any, oldValue: any): void;
    protected AlterouIVA(newValue: any, oldValue: any): void;
    protected AlterouUnidade(newValue: any, oldValue: any): void;
    protected AtualizarEstoqueUnitario(qtdeEstoque: number): string;
    protected AbrirModalGrade(): void;
    protected OnClicouGerarGrade(): void;
    protected GerarProdutosGrade(): void;
    protected OnClicouGravarGrade(): void;
    protected GravarProdutosGrade(): void;
    protected OnClicouFecharGrade(): void;
    protected HabilitaRegraImposto(habilita: boolean): void;
    protected ConsultaIMendes(): void;
    protected PreencherComboRegraImposto(): void;
    private AlternarCamposSetarProduto;
    private LimparProdutoCombo;
    private LimpouItemProdutoCombo;
    private ValidarProdutoCombo;
    private ProcuraProduto;
    private OnBuscaProdutoCombo;
    private OnAntesBuscaProdutoCombo;
    private ValidaValorDecimal;
    private ValidaValorInteiro;
    private InitListas;
}
declare const c_Produt: C_Produt;
//# sourceMappingURL=C_Produt.d.ts.map