declare class C_Fornec extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Fornecedor> {
    ListaRepresentantes: SiSMoura.Core.Entity.Fornecedor_Contato[];
    readonly txtCodigo: MouraTextBoxProcura;
    readonly txtGrupoFornecedorContabil: MouraTextBoxProcura;
    readonly txtContaIntegracaoContabil: MouraTextBoxProcura;
    readonly txtCliente: MouraTextBoxProcura;
    readonly mdImportarDados: MouraModal;
    readonly btnImpotar: MouraButton;
    readonly btnImportarCliente: MouraButton;
    readonly txtCep: MouraTextBoxCep;
    readonly txtCodPostal: MouraTextBox;
    readonly txtCepPagamento: MouraTextBoxCep;
    readonly txtCodPostalPagamento: MouraTextBox;
    readonly txtEndereco: MouraTextBox;
    readonly txtBairro: MouraTextBox;
    readonly txtNumero: MouraTextBox;
    readonly txtCidade: MouraTextBoxProcura;
    readonly txtCPF: MouraTextBoxCPF;
    readonly txtRG: MouraTextBox;
    readonly txtFantasia: MouraTextBox;
    readonly txtNome: MouraTextBox;
    readonly txtValorMinimoCompra: MouraTextBox;
    readonly Mapa: MouraGoogleMaps;
    readonly hdnEnderecoEmpresa: HTMLInputElement;
    readonly hdnCidadeEmpresa: HTMLInputElement;
    readonly hdnNumeroEmpresa: HTMLInputElement;
    readonly btnProcurarEndereco: MouraButton;
    readonly btnTracarRota: MouraButton;
    readonly lstTipoFornecedor: MouraRadioButtonList;
    readonly optTipo: MouraRadioButtonList;
    readonly lstEmpresa: MouraListBoxEmpresa;
    readonly txtContatoRepres: MouraTextBox;
    readonly txtFoneRepres: MouraTextBox;
    readonly txtFone2Repres: MouraTextBox;
    readonly txtFaxRepres: MouraTextBox;
    readonly txtE_Mail_Repres: MouraTextBox;
    readonly btnAdicionarRepres: MouraButton;
    readonly grdRep: MouraGridViewJS;
    readonly mdFornecedoresDuplicados: MouraModal;
    readonly grdFornecedoresDuplicados: MouraGridViewJS;
    readonly tab: MouraTabPanel;
    readonly chkIsHotelParceiro: MouraCheckBox;
    readonly chkCoteFacil: MouraCheckBox;
    readonly chkListarPedSemanal: MouraCheckBox;
    readonly lstEspecies: MouraCheckBoxList;
    readonly optTipoHospedagem: MouraRadioButtonList;
    readonly txtContaContabil: MouraTextBoxProcura;
    protected Init(): void;
    protected OnChkIsHotelParceiroChanged(s: any, e: MouraEventArgs): void;
    protected OnchkCoteFacilChanged(s: any, e: MouraEventArgs): void;
    protected OnAntesGravar(): boolean;
    private validaCampoNulo;
    private campoChecado;
    private campoNaoChecado;
    private preencheValores;
    OnPageLoad(): void;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Fornecedor): void;
    protected ValidarGrupo(): void;
    protected ValidarConta(): void;
    protected ProcuraEmpresa(codEmpresa: number, lista: SiSMoura.Core.Entity.Fornecedor_Empresa[]): SiSMoura.Core.Entity.Fornecedor_Empresa;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Fornecedor): void;
    protected OnDepoisSetEntidade(Entidade: SiSMoura.Core.Entity.Fornecedor): void;
    protected criarEntidadePersonalizados(Entidade: SiSMoura.Core.Entity.Fornecedor): void;
    protected MudouTipo(newValue: any, oldValue: any): void;
    protected MudarLabelComponente(componente: MouraCampo, novoTexto: string): void;
    protected OnConsultarCEP(s: any, e: MouraTextBoxCepPesquisouEventArgs): void;
    private SelecionarFornecedor;
    protected OnTextBoxCpfChange(): void;
    protected OnRepostaVisualizarFornecedorCPF(result: MsgBoxResultEventArgs): void;
    protected OnTextBoxNomeChange(): void;
    protected OnRepostaVisualizarFornecedorNome(result: MsgBoxResultEventArgs): void;
    protected OnConsultarCEPPagamento(s: any, e: MouraTextBoxCepPesquisouEventArgs): void;
    protected OnClickProcurarEndereco(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickTracarRota(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    private ProcurarEndereco;
    private TracarRota;
    private OnClickAdicionarRepresentante;
    private LimparCamposRepresentante;
    private OnClickBotaoImportar;
    private OnClickBotaoImportarCliente;
    protected GetDadosCliente(codigo: number): SiSMoura.Core.Entity.Cliente;
    protected OnDepoisExcluiLinhaGrade(): void;
    protected PreencherParametros(): void;
    protected ImprimirFicha(): void;
    protected OnTxtCPFProcurou(s: any, e: MouraTextBoxCPFPesquisouEventArgs): void;
}
declare var c_Fornec: C_Fornec;
//# sourceMappingURL=C_Fornec.d.ts.map