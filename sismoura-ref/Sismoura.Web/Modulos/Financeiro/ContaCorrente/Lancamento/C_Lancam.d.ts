declare class C_Lancam extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Caixa_Movimentacao> {
    readonly lblTipoLancamento: MouraLabel;
    readonly Grid: MouraGridViewJS;
    readonly hdnValidar: HTMLInputElement;
    readonly cboContaCorrente: MouraContaCorrenteCombo;
    readonly txtHora: MouraTextBoxHora;
    readonly txtCodigo: MouraTextBoxProcura;
    readonly txtContaContabil: MouraTextBoxProcura;
    readonly txtData: MouraTextBoxData;
    readonly txtTipoLancamento: MouraTextBoxProcuraConfiguracaoContabil;
    readonly cboTipo: MouraComboBox;
    readonly txtValor: MouraTextBox;
    readonly txtTipoLancamento_hdnEmpresaContabil: HTMLInputElement;
    readonly grdRateioCentroCusto: MouraGridViewJSEditavel;
    Custos: SiSMoura.Core.Entity.CentroDeCustoRetorno[];
    readonly txtCentroCusto: MouraTextBoxProcura;
    readonly txtValorCentroCusto: MouraTextBox;
    readonly rdTipoRateio: MouraRadioButtonList;
    protected Init(): void;
    protected MudouEmpresa(): void;
    private flag;
    protected OnEditandoItem(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    PreencherEmpresaContabil(codEmpresa: any): void;
    protected OnAbriuProcuraCentroCusto(): void;
    protected OnAntesAbrirProcuraCentroCusto(): void;
    protected OnDepoisBuscarCentroCusto(): void;
    protected OnDepoisBuscarContaContabil(): void;
    OnPageLoad(): void;
    protected MudouContaCorrente(newValue: any, oldValue: any): void;
    protected VerificarCentroCustoGrade(newValue: any, oldValue: any): void;
    protected OnClickIncluirCusto(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected CarregarCentroCusto(codCentroCusto: number): any;
    protected OnCustoAdicionado(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected MudouTipo(newValue: any, oldValue: any): void;
    protected OnPesquisandoTipoLancamento(s: MouraTextBoxProcura, e: MouraEventArgs): void;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Caixa_Movimentacao): void;
    protected OnAntesSetEntidade(eventArg: MouraEntidadeCancelavel<SiSMoura.Core.Entity.Caixa_Movimentacao>): void;
    private PreencherCustos;
    private respondeuContas;
    protected OnAntesDeletar(): boolean;
    protected OnResondeuContas(result: MsgBoxResultEventArgs): void;
    protected GetCadastrados(): void;
    protected OnGridCellPrepared(s: any, e: MouraGridViewJSCellPreparedEventArgs): void;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Caixa_Movimentacao): void;
    protected OnDepoisGravar(): boolean;
    protected OnAntesGravar(): boolean;
    protected ValidarContaContabil(): boolean;
    protected AlterarEntidadeData(data: Date, hora: Date): Date;
}
declare var c_Lancam: C_Lancam;
//# sourceMappingURL=C_Lancam.d.ts.map