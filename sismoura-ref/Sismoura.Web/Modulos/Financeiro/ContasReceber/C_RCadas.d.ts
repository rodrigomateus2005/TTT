interface ParcelaPendente {
    Codigo: number;
    Parcela: number;
    Data_Emissao: Date;
    Doc_Merc: number;
    Numero_Doc_Mercantil: string;
    Data_Vencimento: Date;
    Valor: number;
    Como_Recebeu: string;
    Numero_Documento_Bancario: string;
    Conta_Corrente: string;
    Posicao_Titulo: number;
    Conta_Contabil: number;
    Observacao: string;
}
declare class C_RCadas extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Contas_Receber> {
    protected isContinuarAlterarParcelas: boolean;
    readonly tab: MouraTabPanel;
    readonly txtCodigo: MouraTextBoxProcura;
    readonly txtCliente: MouraTextBoxProcura;
    readonly txtTipoLancamentoContabil: MouraTextBoxProcuraConfiguracaoContabil;
    readonly txtTipoLancamentoContabil_hdnEmpresaContabil: HTMLInputElement;
    readonly txtContaContabil: MouraTextBoxProcura;
    readonly txtUsuarioResponsavel: MouraTextBoxProcura;
    readonly grid: MouraGridViewJS;
    readonly hdnBaixa: HTMLInputElement;
    readonly hdnData: HTMLInputElement;
    readonly txtValor: MouraTextBox;
    readonly cboContaCorrente: MouraContaCorrenteCombo;
    readonly hdnConfiguracoesBloquearClienteEmpresa: HTMLInputElement;
    readonly btnReplicar: MouraButton;
    readonly mdReplicar: MouraModal;
    readonly txtQtdeParcela: MouraTextBox;
    readonly cboDias: MouraComboBox;
    readonly txtDias: MouraTextBox;
    readonly txtTipoLancamentoContabilReplica: MouraTextBoxProcuraConfiguracaoContabil;
    readonly txtTipoLancamentoContabilReplica_hdnEmpresaContabil: HTMLInputElement;
    readonly lblCliente: MouraLabel;
    Replicas: any[];
    readonly grdReplicar: MouraGridViewJSEditavel;
    readonly btnOkReplicar: MouraButton;
    readonly btnCancelarReplica: MouraButton;
    readonly grdRateioCentroCusto: MouraGridViewJSEditavel;
    Custo: any;
    Custos: any[];
    readonly txtCentro_Custo: MouraTextBoxProcura;
    readonly txtValorCentroCusto: MouraTextBox;
    readonly rdTipoRateio: MouraRadioButtonList;
    readonly txtCentroCusto: MouraTextBoxProcura;
    readonly mdAlterarParcelas: MouraModal;
    readonly grdAlterarParcelas: MouraGridViewJSEditavel;
    readonly btnGravarParcelas: MouraButton;
    readonly btnSairParcelas: MouraButton;
    Parcela: any;
    Parcelas: any[];
    Centro_Custo: any;
    flagAlterouParcelas: boolean;
    flagPrimeiraVez: boolean;
    protected Init(): void;
    OnPageLoad(): void;
    protected MudouContaCorrente(newValue: any, oldValue: any): void;
    PreencherEmpresaContabil(codEmpresa: any): void;
    protected VerificarCentroCustoGrade(newValue: any, oldValue: any): void;
    protected OnGravouSucesso(s: any, e: MouraGravouSucessoEventArgs): void;
    protected OnDepoisBuscarCentroCusto(): void;
    protected OnExcluiuSucesso(s: any, e: any): void;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Contas_Receber): void;
    protected LimparModalReplica(): void;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Contas_Receber): void;
    protected OnAntesSetEntidade(eventArg: MouraEntidadeCancelavel<SiSMoura.Core.Entity.Contas_Receber>): void;
    protected OnProcurouTxtTipoLancamentoContabil(): void;
    protected OnProcurouTxtTipoLancamentoContabilReplica(): void;
    protected SelecionarRegistro(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnGridCellPrepared(s: any, e: MouraGridViewJSCellPreparedEventArgs): void;
    protected OnAntesGravar(): boolean;
    protected OnSelecionouOpcaoMsgBoxData(result: MsgBoxResultEventArgs): void;
    protected OnAntesDeletar(): boolean;
    protected OnDepoisBuscarCliente(): void;
    protected PreencherGradeContas(): void;
    protected OnDepoisBuscarContaContabil(): void;
    protected MostrarModalReplica(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickReplicar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnSelecionouOpcaoMsgBox(result: MsgBoxResultEventArgs): void;
    protected OnClickIncluirReplica(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected Replicar(): void;
    protected CancelarReplica(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected CarregarCentroCusto(codCentroCusto: number): any;
    protected OnCustoAdicionado(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected OnClickIncluirCusto(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    private PreencherCustos;
    protected OnAntesAbrirProcuraContaContabil(s: any, e: MouraTextBoxProcuraAntesAbrirProcuraEventArgs): void;
    protected OnDepoisBuscarUsuario(): void;
    protected GetParcelasContasReceber(entidade: SiSMoura.Core.Entity.Contas_Receber): void;
    protected ContinuarAlterandoParcelas(): void;
    protected SetColunasEditaveis(): void;
    protected AlterarParcelasPendentes(d: any): void;
    protected OnEditouGridAlterarParcelas(s: MouraGridViewJS, e: MouraGridViewJSItemEventArgs): void;
    protected OnGravouAlterarParcelas(): void;
    protected OnSairParcelas(): void;
}
declare const c_RCadas: C_RCadas;
//# sourceMappingURL=C_RCadas.d.ts.map