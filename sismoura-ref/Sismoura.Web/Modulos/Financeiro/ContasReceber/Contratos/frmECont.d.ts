declare class FrmECont extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Contrato> {
    private COMMAND_EXCLUIR_PARCELA;
    private COMMAND_ABRIR_CONTRATO;
    private COMMAND_NENHUMA_PARCELA_INFORMADA;
    private COMMAND_SELECIONAR_EXISTENTE;
    private CONTRATO_CANCELADO;
    ParcelaPendente: SiSMoura.Core.Entity.ContratoContasPendentesRetorno;
    ParcelasPendentes: SiSMoura.Core.Entity.ContratoContasPendentesRetorno[];
    Replicas: SiSMoura.Core.Entity.ContratoContasPendentesRetorno[];
    readonly grdPendente: MouraGridViewJSEditavel;
    readonly grdBaixadas: MouraGridViewJS;
    readonly gridAnimal: MouraGridViewJS;
    readonly gridReplicar: MouraGridViewJSEditavel;
    readonly chkUtilizarContrato: MouraCheckBox;
    readonly chkCortesia: MouraCheckBox;
    readonly txtContrato: MouraTextBoxProcura;
    readonly txtCliente: MouraTextBoxProcura;
    readonly txtPeriodo_Vigencia: MouraTextBoxPeriodo;
    readonly txtContaContabil: MouraTextBoxProcura;
    readonly txtQuantidade: MouraTextBox;
    readonly txtAnimal: MouraTextBoxProcura;
    readonly txtQtdeParcela: MouraTextBox;
    readonly txtDias: MouraTextBox;
    readonly cboDias: MouraComboBox;
    readonly cboConta: MouraContaCorrenteCombo;
    readonly cboFormaRecebimentoParcela: MouraComboBox;
    readonly lblContCancelado: MouraLabel;
    readonly lblUltimoContrato: MouraLabel;
    readonly btnReplicar: MouraButton;
    readonly btnCalcular: MouraButton;
    readonly btnAdicionar: MouraButton;
    readonly btnReplicarParcelas: MouraButton;
    readonly btnCancelarReplicar: MouraButton;
    readonly btnOkReplicar: MouraButton;
    readonly btnEmitirContrato: MouraButton;
    readonly btnAnexos: MouraButton;
    readonly AbaAnimal: MouraTabPage;
    readonly tab: MouraTabPanel;
    readonly txtServico: MouraTextBoxProcura;
    readonly txtCodigo: MouraTextBoxProcura;
    readonly txtParcela: MouraTextBox;
    readonly chkCortesiaParcela: MouraCheckBox;
    readonly dlgAnexo: MouraModalAnexo;
    readonly hdnAceitaGravarSemParcelas: HTMLInputElement;
    readonly mdReplicar: MouraModal;
    OnPageLoad(): void;
    Init(): void;
    private GetEnumPetShop;
    OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Contrato): void;
    LimparCampos(): void;
    private LimparParcelasPendentes;
    private LimparCamposSelecionarContratoImportar;
    private LimparCamposImportacaoContrato;
    private LimparPastaTempAnexos;
    private LimparReplique;
    private ObterUltimoContrato;
    PreencherEntidade(codigo: string): void;
    protected OnDepoisBuscarExistente(Entity: SiSMoura.Core.Entity.Contrato): void;
    private CarregarParcelasPendentes;
    private PreencherGradeBaixadas;
    private PreencherGradeAnimal;
    private GetProximaParcela;
    private GetMaxParcelaBaixada;
    private MoverAnexosNovos;
    protected OnAntesGravar(): boolean;
    private PreenchePagamentosPendentesGravar;
    protected OnAntesDeletar(): boolean;
    protected OnDepoisDeletar(): boolean;
    protected OnDepoisGravar(): boolean;
    private ProcurouContrato;
    private ProcurouServico;
    private ProcurouCliente;
    private AlterouTextoQuantidade;
    private AlterouTextoParcela;
    private AntesExcluirPendente;
    private ClicouAdicionar;
    private ValidarAdicionarParcela;
    private ClicouEmitirContrato;
    private ClicouCancelarReplicar;
    private CliclouReplicar;
    private ClicouReplicarParcelas;
    private ClicouOkReplicar;
    private ClicouCalcular;
    private ClicouAnexo;
    private ContratoCheckChanged;
    private AdicionarParcelaReplicadaGrade;
    private AdicionarParcelaReplicada;
    private SelecionouAnimal;
}
declare const frmECont: FrmECont;
//# sourceMappingURL=frmECont.d.ts.map