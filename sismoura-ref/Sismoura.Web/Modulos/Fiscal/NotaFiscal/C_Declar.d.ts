declare var existente: boolean;
declare class C_Declar extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Declaracao_Conteudo> {
    readonly grdItens: MouraGridViewJS;
    readonly cboEmpresa: MouraComboBoxEmpresa;
    readonly txtDestinatario: MouraTextBoxProcura;
    readonly lblCpf: MouraLabel;
    readonly txtEndereco: MouraTextBox;
    readonly txtNumero: MouraTextBox;
    readonly txtComplemento: MouraTextBox;
    readonly txtBairro: MouraTextBox;
    readonly txtCep: MouraTextBox;
    readonly lblMunicipio: MouraLabel;
    readonly lblEstado: MouraLabel;
    readonly btnAdicionarProduto: MouraButton;
    readonly mdProduto: MouraModal;
    readonly btnImportarOrcamento: MouraButton;
    readonly btnImportarNFe: MouraButton;
    readonly mdImportarNFe: MouraModal;
    readonly mdOrcamento: MouraModal;
    readonly grdOrcamento: MouraGridViewJS;
    readonly chkConsiderar_Peso_Produto: MouraCheckBox;
    readonly txtPeso_Total: MouraCheckBox;
    readonly txtProduto: MouraTextBoxProcura;
    readonly txtQtde: MouraTextBox;
    readonly txtValorUnitario: MouraTextBox;
    readonly txtSubTotal: MouraTextBox;
    Item: SiSMoura.Core.Entity.DeclaracaoConteudoItemRetorno;
    ItemGrid: SiSMoura.Core.Entity.DeclaracaoConteudoItemRetorno;
    readonly btnOKProduto: MouraButton;
    readonly btnMenuProduto: MouraButton;
    ProdutosDeclaracao: SiSMoura.Core.Entity.DeclaracaoConteudoItemRetorno[];
    readonly cboEmpresaNFe: MouraComboBoxEmpresa;
    readonly cboSituacaoNFe: MouraComboBox;
    readonly txtPeriodoNFe: MouraTextBoxPeriodo;
    readonly txtDestinatarioNFe: MouraTextBoxProcura;
    readonly txtNF: MouraTextBox;
    readonly btnLimparNFe: MouraButton;
    readonly btnGerarNFe: MouraButton;
    readonly btnOkImportarNFe: MouraButton;
    readonly grdNFe: MouraGridViewJS;
    NFeDeclaracao: SiSMoura.Core.Entity.DeclaracaoConteudoNFeRetorno[];
    readonly btnImportarVendas: MouraButton;
    readonly mdImportarVendas: MouraModal;
    readonly btnGerarVendas: MouraButton;
    readonly txtDataInicialVenda: MouraTextBoxData;
    readonly txtDataFinalVenda: MouraTextBoxData;
    readonly cboTipoRelacaoVenda: MouraComboBox;
    readonly txtVendaInicial: MouraTextBox;
    readonly txtVendaFinal: MouraTextBox;
    readonly grdImportarVenda: MouraGridViewJS;
    RelacaoVendas: SiSMoura.Core.Entity.DeclaracaoConteudoVendaRetorno[];
    readonly btnOkImportarVendas: MouraButton;
    readonly btnGerarOrcamento: MouraButton;
    readonly txtCodOrcamento: MouraTextBox;
    readonly txtDataInicialOrcamento: MouraTextBoxData;
    readonly txtDataFinalOrcamento: MouraTextBoxData;
    readonly cboOrcamento: MouraComboBox;
    readonly txtClienteOrcamento: MouraTextBoxProcura;
    RelacaoOrcamento: SiSMoura.Core.Entity.DeclaracaoConteudoOrcamentoRetorno[];
    readonly btnImportarOS: MouraButton;
    readonly mdOS: MouraModal;
    readonly grdOS: MouraGridViewJS;
    readonly btnGerarOS: MouraButton;
    readonly txtCodOS: MouraTextBox;
    readonly txtDataInicialOS: MouraTextBoxData;
    readonly txtDataFinalOS: MouraTextBoxData;
    readonly cboSituacaoOS: MouraComboBox;
    readonly txtClienteOS: MouraTextBoxProcura;
    RelacaoOS: SiSMoura.Core.Entity.DeclaracaoConteudoOSRetorno[];
    readonly btnImportarConsig: MouraButton;
    readonly mdConsig: MouraModal;
    readonly grdConsig: MouraGridViewJS;
    readonly btnGerarConsig: MouraButton;
    readonly txtCodConsig: MouraTextBox;
    readonly txtDataInicialConsig: MouraTextBoxData;
    readonly txtDataFinalConsig: MouraTextBoxData;
    readonly cboTipoConsig: MouraComboBox;
    readonly txtClienteConsig: MouraTextBoxProcura;
    RelacaoConsig: SiSMoura.Core.Entity.DeclaracaoConteudoConsigRetorno[];
    Init(): void;
    OnPageLoad(): void;
    OnDepoisGravar(): boolean;
    OnDepoisDeletar(): boolean;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Declaracao_Conteudo): void;
    Limpar(): void;
    protected PreencherVindoNotaFiscal(): void;
    protected PreencherGrade(): void;
    protected OntxtDestinatarioPesquisou(oldValue: any, newValue: any): void;
    protected OnPesquisouDadosCliente(): boolean;
    protected BloquearCamposDestinatario(flag: boolean): void;
    protected LimparDestinatario(entidade: SiSMoura.Core.Entity.Declaracao_Conteudo): void;
    protected OntxtDestinatarioLimpou(): void;
    protected OnClickBotaoAdicionarProduto(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBtnImportarNFe(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBtnImportarVendas(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickLimparNFe(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected LimparModalNFe(): void;
    protected LimparModalVenda(): void;
    protected LimparModalOrcamento(): void;
    protected LimparModalOS(): void;
    protected LimparModalConsig(): void;
    protected OnClickGerarNFe(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickImportarNFe(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected produtosNF(NF: any): void;
    protected OnClickBotaoGerarVendas(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickImportarVendas(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoImportOrcamento(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoGerarOrcamento(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected SelecionouOrcamento(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): boolean;
    protected ImportarOrcamento(dados: any): boolean;
    protected OnClickBotaoImportarOs(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoGerarOS(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected SelecionouOS(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): boolean;
    protected ImportarOS(dados: any): boolean;
    protected OnClickBotaoImportarConsig(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoGerarConsig(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected SelecionouConsig(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): boolean;
    protected ImportarConsig(dados: any): boolean;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Declaracao_Conteudo): void;
    protected OnCheckConsiderar_Peso_ProdutoChange(): void;
    protected CalcularSubTotal(oldValue: any, newValue: any): void;
    protected OnPesquisouDadosProduto(s: any, e: any): boolean;
    protected LimparProduto(): void;
    protected OnClickOkBtnProduto(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickMenuProduto(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnEditouProduto(s: any, e: any): void;
    protected CalculaPesoTotal(e: any): void;
    protected OnAntesGravarDeclaracao(s: any, e: MouraAntesGravarEventArgs): boolean;
    protected ImprimirDeclaracao(): void;
}
declare const c_Declar: C_Declar;
//# sourceMappingURL=C_Declar.d.ts.map