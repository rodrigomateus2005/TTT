interface IMouraScopeNotaFiscal extends IMouraScope<SiSMoura.Core.Entity.Entrada_Produto> {
    Servico: SiSMoura.Core.Entity.FiscalNFServicoRetorno;
    Item: SiSMoura.Core.Entity.FiscalNFProdutoRetorno;
    Cobranca: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento;
}
declare var Enum_Pagamentos_NF: {
    DinheiroNF: number;
    ChequeNF: number;
    CartaoCreditoNF: number;
    CartaoDebitoNF: number;
    CreditoLojaNF: number;
    ValeAlimentacaoNF: number;
    ValeRefeicaoNF: number;
    ValePresenteNF: number;
    ValeCombustivelNF: number;
    DuplicataMercantilNF: number;
    BoletoNF: number;
    SemPagamentoNF: number;
    OutrosNF: number;
};
declare const motivosDesoneracao: {
    '3': string;
    '4': string;
    '5': string;
    '6': string;
    '7': string;
    '8': string;
    '9': string;
    '10': string;
    '11': string;
    '12': string;
};
declare class C_NotaF extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Fiscal_Nf> {
    private valorAnteriorFormulario;
    readonly grdItens: MouraGridViewJS;
    readonly txtTipoLancamentoContabil_hdnEmpresaContabil: HTMLInputElement;
    readonly grdItensArquivo: MouraGridViewJS;
    readonly cboCST: MouraComboBox;
    readonly grdImportVenda: MouraGridViewJS;
    readonly grdOrcamento: MouraGridViewJS;
    readonly grdEventosNFe: MouraGridViewJS;
    readonly tabProduto: MouraTabPanel;
    ValidacoesEntrada: EntradaProdutoValidacoes;
    readonly grdItensServico: MouraGridViewJS;
    readonly grdNFRef: MouraGridViewJS;
    readonly btnAdicionarProduto: MouraButton;
    readonly btnAdicionarServico: MouraButton;
    readonly btnImportarVendas: MouraButton;
    readonly btnImportarOrcamento: MouraButton;
    readonly btnGerenciarNFe: MouraButton;
    readonly btnAdicionarNF: MouraButton;
    readonly btnMais: MouraButton;
    readonly btnMenos: MouraButton;
    readonly btnConfirmaEvento: MouraButton;
    readonly btnTransmitir: MouraButton;
    readonly btnGerarXml: MouraButton;
    readonly btnAssinar: MouraButton;
    readonly btnConsultar: MouraButton;
    readonly mdProdutos: MouraModal;
    readonly mdCobranca: MouraModal;
    readonly mdServicos: MouraModal;
    readonly mdNFRef: MouraModal;
    readonly btnOKNFRef: MouraButton;
    readonly btnOKProduto: MouraButton;
    readonly btnOKServico: MouraButton;
    readonly btnOkImportVenda: MouraButton;
    readonly txtDataInicialV: MouraTextBoxData;
    readonly txtDataInicialO: MouraTextBoxData;
    readonly btnAdicionarReceber: MouraButton;
    readonly txtDataFinalV: MouraTextBoxData;
    readonly txtDataFinalO: MouraTextBoxData;
    readonly txtFormulario: MouraTextBox;
    readonly cboTipoRelacao: MouraComboBox;
    readonly cboCFOPNatureza: MouraComboBox;
    readonly txtVendaInicial: MouraTextBox;
    readonly txtVendaFinal: MouraTextBox;
    readonly txtDadosAnilha: MouraTextBox;
    readonly mdImportVenda: MouraModal;
    readonly mdOrcamento: MouraModal;
    readonly mdTransmitirNFe: MouraModal;
    readonly mdDadosAdicionais: MouraModal;
    readonly mdEventosNFe: MouraModal;
    readonly txtProduto: MouraTextBoxProcura;
    readonly txtServico: MouraTextBoxProcura;
    readonly txtValorTotalXml: MouraTextBox;
    readonly txtCodOrcamento: MouraTextBox;
    readonly txtSiscomexNota: MouraTextBox;
    readonly txtNotaXml: MouraTextBox;
    readonly txtChaveAcessoRef: MouraTextBox;
    readonly btnGerar: MouraButton;
    readonly btnGerarOrcamento: MouraButton;
    readonly btnAddDadosContribuinte: MouraButton;
    readonly btnEventos: MouraButton;
    readonly btnDanfe: MouraButton;
    readonly btnDeclararConteudo: MouraButton;
    readonly txtJustificativaEvento: MouraTextBox;
    readonly hdnCodigo: HTMLInputElement;
    readonly hdnSeriePadrao: HTMLInputElement;
    readonly hdnEmpresa: HTMLInputElement;
    readonly hdnCaminhoXML: HTMLInputElement;
    readonly hdnProdutosNfe: HTMLInputElement;
    readonly hdnQuantidadeTransp: HTMLInputElement;
    readonly hdnPesoBrutoXml: HTMLInputElement;
    readonly hdnPesoLiquidoXml: HTMLInputElement;
    readonly hdnValorProdutosXml: HTMLInputElement;
    readonly hdnEspecieTransp: HTMLInputElement;
    readonly hdnGrupoFiscal: HTMLInputElement;
    readonly cboTipoEvento: DevExpress.Web.Scripts.ASPxClientComboBox;
    readonly cbpEventoNFe: MouraCallBackPanel;
    readonly lblGrupoFiscal: MouraLabel;
    readonly cboEstoque: MouraComboBox;
    readonly txtTipoLancamentoContabil: MouraTextBoxProcuraConfiguracaoContabil;
    RelacaoVendas: SiSMoura.Core.Entity.FiscalNFVendaRetorno[];
    EventosNFe: SiSMoura.Core.Entity.FiscalNFGradeEventoRetorno[];
    RelacaoOrcamentos: SiSMoura.Core.Entity.FiscalNFOrcamentoRetorno[];
    ChavesReferenciadas: SiSMoura.Core.Entity.FiscalNFChaveReferenciaRetorno[];
    ProdutosNota: SiSMoura.Core.Entity.FiscalNFProdutoRetorno[];
    ProdutoAnilhas: SiSMoura.Core.Entity.Fiscal_Nf_Produto_Anilha[];
    ServicosCompra: SiSMoura.Core.Entity.Entrada_Servico[];
    ProdutosCompra: SiSMoura.Core.Entity.Entrada_Produto_Itens[];
    FornecedorCompra: SiSMoura.Core.Entity.PessoaBasicoRetorno;
    ServicosNota: SiSMoura.Core.Entity.FiscalNFServicoRetorno[];
    ContasGeradas: SiSMoura.Core.Entity.FiscalNFPagamentoRetorno[];
    readonly txtParcela: MouraTextBox;
    readonly txtDiasVencimento: MouraTextBox;
    readonly txtVencimentoInicial: MouraTextBoxData;
    readonly cboDiasFixo: MouraComboBox;
    readonly btnGerarReceber: MouraButton;
    readonly cboDocumentoMercantilReceber: MouraComboBox;
    readonly txtContaContabil: MouraTextBox;
    readonly cboContaCorrente: MouraComboBox;
    readonly btnOkReceber: MouraButton;
    readonly grdContasGeradas: MouraGridViewJS;
    readonly grdContaReceber: MouraGridViewJS;
    readonly mdImportarXML: MouraModal;
    readonly btnOkImportar: MouraButton;
    readonly fUploadXml: MouraFileUpload;
    readonly lblFUNRURAL: MouraLabel;
    readonly mdAnilha: MouraModal;
    readonly txtBuscaMicrochip: MouraTextBox;
    readonly btnBuscar: MouraButton;
    readonly grdMicrochip: MouraGridViewJS;
    readonly lblTotalProduto: MouraLabel;
    readonly chkSomarIPIDevolvido: MouraCheckBox;
    readonly lblTotalMicrochip: MouraLabel;
    readonly btnCancelar: MouraButton;
    readonly btnOKMicrochip: MouraButton;
    readonly txtDestinatario: MouraTextBoxProcura;
    readonly txtCnpj: MouraTextBoxCPF;
    readonly txtIE: MouraTextBox;
    readonly txtEndereco: MouraTextBox;
    readonly txtNumero: MouraTextBox;
    readonly txtComplemento: MouraTextBox;
    readonly txtBairro: MouraTextBox;
    readonly txtCep: MouraTextBox;
    readonly lblMunicipio: MouraLabel;
    readonly txtTelefone: MouraTextBoxTelefone;
    readonly lblEstado: MouraLabel;
    Servico: SiSMoura.Core.Entity.FiscalNFServicoRetorno;
    Item: SiSMoura.Core.Entity.FiscalNFProdutoRetorno;
    NFe: SiSMoura.Core.Entity.Fiscal_Nfe;
    RetNFe: SiSMoura.Core.Entity.FiscalNFeEnvioRetorno;
    readonly txtPercIPIDev: MouraTextBox;
    readonly txtValorIPIDev: MouraTextBox;
    readonly cboOrcamento: MouraComboBox;
    readonly txtClienteOrcamento: MouraTextBoxProcura;
    readonly txtBaseIcmsStR: MouraTextBox;
    readonly txtIVA: MouraTextBox;
    readonly agpP8: MouraAgrupamento;
    readonly txtAliqFCP: MouraTextBox;
    readonly txtValorICMSST: MouraTextBox;
    readonly txtAliqIcmsST: MouraTextBox;
    readonly cboModalidadeBaseICMSST: MouraComboBox;
    readonly lblICMSST: MouraLabel;
    readonly enviarEmail: MouraEmail;
    readonly mdImportarCompra: MouraModal;
    readonly btnImportarCompra: MouraButton;
    readonly lblRazaoSocialCompra: MouraLabel;
    readonly lblCnpjCompra: MouraLabel;
    readonly lblChaveAcessoCompra: MouraLabel;
    readonly lblQtdeProdCompra: MouraLabel;
    readonly lblTotalProdutosCompra: MouraLabel;
    readonly lblTotalNFCompra: MouraLabel;
    readonly btnConfirmarCompra: MouraButton;
    readonly btnCancelarCompra: MouraButton;
    readonly txtCodEntrada: MouraTextBoxProcura;
    readonly cboFinalidadeCompra: MouraComboBox;
    readonly cboFinalidade: MouraComboBox;
    readonly cboEmpresa: MouraComboBoxEmpresa;
    readonly cboSerie: MouraComboBox;
    readonly cboTipoDocumento: MouraComboBox;
    readonly txtQuantidade: MouraTextBox;
    CobCrediario: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento;
    CobCrediarios: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento[];
    CobCheque: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento;
    CobCheques: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento[];
    CobCartao: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento;
    CobCartoes: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento[];
    CobDinheiro: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento;
    CobDinheiros: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento[];
    CobOutro: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento;
    CobOutros: SiSMoura.Core.Entity.Fiscal_Nf_Pagamento[];
    readonly txtCobCheCliente: MouraTextBoxProcura;
    readonly lstOptCobCheTipo: MouraRadioButtonList;
    readonly txtCobCheCpf: MouraTextBoxCPF;
    readonly grdCobCrediario: MouraGridViewJSEditavel;
    readonly grdCobCheque: MouraGridViewJSEditavel;
    readonly grdCobCartao: MouraGridViewJSEditavel;
    readonly grdCobDinheiro: MouraGridViewJSEditavel;
    readonly grdCobOutros: MouraGridViewJSEditavel;
    readonly txtCobCredParcela: MouraTextBox;
    readonly txtCobCredDataVencimento: MouraTextBoxData;
    readonly txtCobCredValorCrediario: MouraTextBox;
    readonly cboCobCredContaCorrente: MouraContaCorrenteCombo;
    readonly cboCobCredFormaPagamento: MouraComboBox;
    readonly lblCobTotal: MouraLabel;
    readonly lblCobRestante: MouraLabel;
    readonly lblCobTroco: MouraLabel;
    readonly cboCobCarCartao: MouraComboBox;
    readonly cboCobOutMeioPagamento: MouraComboBox;
    readonly cboCobOutIndFormaPag: MouraComboBox;
    readonly cboCobCredDocBancario: MouraComboBox;
    readonly txtDataEmissao: MouraTextBoxData;
    readonly cboCobCredDocMercantil: MouraComboBox;
    readonly txtCobCredContaContabil: MouraTextBoxProcura;
    readonly lblCobCredMsgContasReceber: MouraLabel;
    private _qtdVendasImportadas;
    qtdVendasImportadas: number;
    readonly cboTipoAtendimento: MouraComboBox;
    readonly txtValorICmsDeson: MouraTextBox;
    readonly cboMotivoDeson: MouraComboBox;
    readonly txtDadosAdFisco: MouraTextBox;
    readonly cboConsumidorFinal: MouraComboBox;
    protected Init(): void;
    protected OnCheckIPIDevolvidoChange(): void;
    protected OnCodEntradaProcurou(): void;
    protected OnClickBotaoCancelarCompra(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickBotaoConfirmarCompra(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    PreencherEmpresaContabil(codEmpresa: any): void;
    preencherInfAdicionais(): any;
    OnPageLoad(): void;
    protected OnFileUploadXMLComplete(s: any, e: DevExpress.Web.Scripts.ASPxClientUploadControlFileUploadCompleteEventArgs): void;
    protected OnGravouProdutoGrade(s: any, e: MouraGridViewJSItemEventArgs): void;
    protected selecionaAnilha(): void;
    protected onMudouComboEmpresa(oldValue: any, newValue: any): void;
    protected AdicionarParametroLancamentoContabil(): void;
    protected PreencherComboCST(): void;
    protected OnMudouComboSerie(oldValue: any, newValue: any): void;
    protected OnClicouBotaoOkReceber(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBtnDanfe(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnAntesGravar(): boolean;
    protected OnAntesGravarNota(s: any, e: MouraAntesGravarEventArgs): boolean;
    protected OnDepoisGravarNota(s: any, e: MouraGravouSucessoEventArgs): boolean;
    protected OnMudouTipoDocumento(oldValue: any, newValue: any): void;
    protected OnMudouCFOP(oldValue: any, newValue: any): void;
    protected OnDigitouFormulario(oldValue: any, newValue: any): boolean;
    protected OnMudouIdentificacao(): void;
    protected RespostaSequencia(result: MsgBoxResultEventArgs): void;
    protected retornaNumeracao(): void;
    protected OnClickBotaoOkVenda(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected PreencherPagamento(pag: any, Venda: any): void;
    protected SelecionouOrcamento(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): boolean;
    protected RespostaProduto(result: MsgBoxResultEventArgs): void;
    protected ImportarOrcamento(dados: any): boolean;
    protected OnClickBotaoGerar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoMais(): boolean;
    protected OnClickBotaoMenos(): boolean;
    protected OnClickAbrirModalCompra(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoGerarOrcamento(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoAdicionarProduto(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoAdicionarNF(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoImportVenda(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoBuscar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickBotaoGerenciarNFe(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoImportOrcamento(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoAdicionarParcelas(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoEventosNFe(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoAddDadosAdicionais(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnTextBoxDescontoPChange(oldValue: any, newValue: any): boolean;
    protected OnTextBoxDescontoPServicoChange(oldValue: any, newValue: any): boolean;
    protected OnTextBoxDescontoRChange(oldValue: any, newValue: any): boolean;
    protected OnTextBoxIVAChange(): void;
    protected OntxtPercIPIDevChange(): void;
    protected OntxtValorIPIDevChange(): void;
    protected CalcularValorPIS(oldValue: any, newValue: any): void;
    protected CalcularValorCOFINS(oldValue: any, newValue: any): void;
    protected CalcularValorPISServico(oldValue: any, newValue: any): void;
    protected CalcularValorCOFINSServico(oldValue: any, newValue: any): void;
    protected CalcularValorFCP(oldValue: any, newValue: any): void;
    protected CalcularValorIPI(oldValue: any, newValue: any): void;
    protected CalcularValorISSQN(oldValue: any, newValue: any): void;
    protected CalcularBaseICMSST(): void;
    private ICMSSTCalculado;
    protected permiteIcmsSt(entidade: SiSMoura.Core.Entity.FiscalNFProdutoRetorno): boolean;
    protected CalcularValorICMSST(): void;
    protected CalcularValorICMS(oldValue: any, newValue: any): void;
    protected CalcularSubTotalServico(oldValue: any, newValue: any): void;
    protected CalcularSubTotal(oldValue: any, newValue: any): void;
    protected CalcularValorDescontoPorcentagem(): void;
    protected CalcularValorDescontoPorcentagemServico(oldValue: any, newValue: any): void;
    protected CalcularValorDescontoReais(): void;
    protected CalcularValorDescontoReaisServico(): void;
    protected CalcularTotalNota(): void;
    protected InserirDadosAdicionais(codVendas: string): void;
    protected CalcularValorTotalProduto(): void;
    protected CalcularValorTotalServico(): void;
    protected OnClickBotaoAdicionarServico(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnComboBoxFinalidadeChange(oldValue: any, newValue: any): void;
    protected OnClickBotaoConfirmarEvento(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Fiscal_Nf): void;
    protected preencherDadosAnilha(Entidade: SiSMoura.Core.Entity.Fiscal_Nf): void;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Fiscal_Nf): void;
    protected OnClickGerarReceber(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoGerarXML(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoAssinarXML(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnClickBotaoEnviarXML(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected MovimentarEstoqueProdutos(cancelamento: boolean): void;
    protected OnExcluiuProdutoGrade(s: any, e: any): void;
    protected OnImprimirCartaCorrecao(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnClickBotaoConsultar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected carregarEventosNFe(e: MsgBoxResultEventArgs): void;
    protected OnClickOkBtnRef(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickOkBtnSelecionarAnilha(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickOkBtnCancelarAnilha(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    private preencheuAnilha;
    protected OnClickOkBtnProd(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected preencherAnilhas(): void;
    protected OnClickOkBtnServico(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnPesquisouDadosServico(s: any, e: any): boolean;
    protected LimparProduto(): void;
    protected OnPesquisouDadosProduto(s: any, e: any): boolean;
    protected PreencherProduto(): boolean;
    protected OnPesquisouDadosCliente(): boolean;
    protected BloquearCamposDestinatario(flag: boolean): void;
    protected MudouTipo(tipo: String): void;
    protected LimparCliente(entidade: SiSMoura.Core.Entity.Fiscal_Nf): void;
    protected OnChangetxtChaveAcessoRef(): void;
    protected OnClickBotaoOkImportar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnMudouTranpostadora(oldValue: any, newValue: any): void;
    protected OnClickEnviarEmail(): void;
    protected OnMudouCST(CST: string): void;
    protected MostrarICMSST(flag: boolean): void;
    protected MostrarICMS(flag: boolean): void;
    protected OnCalcularValorTotalProduto(oldValue: any, newValue: any): void;
    protected OnCalcularValorTotalServico(oldValue: any, newValue: any): void;
    protected OntxtDestinatarioPesquisou(oldValue: any, newValue: any): void;
    protected OntxtDestinatarioLimpou(): void;
    protected OnCobCheClienteProcurou(): void;
    protected OnMudouCobCPF(): void;
    protected OnMudouCobCredForma_Pagamento(): void;
    protected OnMudoutxtCobCredParcela(): void;
    protected GerarCobCrediario(): boolean;
    protected CalcularTotaisCobranca(): void;
    protected AddPadroesCobranca(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected AddCobCrediario(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    protected AddCobCheque(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected AddCobCartao(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected AddCobDinheiro(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected AddCobOutros(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected LimparCobranca(): void;
    protected CarregarCobranca(): void;
    protected ItemCobrancaAdicionado(): void;
    protected OnMudoucboCobCredFormaPagamento(): void;
    protected MudarObrigatorioCobCrediario(flag: any): void;
    protected PreencherCobranca(Pagamento: any[]): void;
    protected ConverterDocMercToFormaPag(Doc_Merc: number, Venda: number, Pagamento: any): void;
    protected OnVencimentoParcelaChange(): void;
    protected PreencherDescricaoPagamentos(pag: any): void;
    protected GerarContasReceber(): void;
    protected SalvarContasReceber(configFiscal: any): void;
    protected RatearValorNosProdutos(ratear: number, desconto: boolean): void;
    protected SerieCPFValido(): boolean;
    protected PreencherMotivoDesoneracao(): void;
    protected PreencherComboMotivoDesonDinamicamente(chavesDesoneracao: string[]): void;
    protected PreencherComboICMSDesonerado(CST: string): void;
    protected OnMudouValorIcmsDeson(): void;
    protected AdicionarDadosAdicionaisEntrega(): string;
    protected OnSelecionouLinha(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected abrirDeclaracaoConteudo(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    private validarImpostosProdutos;
    private validarFatura;
}
declare var c_NotaF: C_NotaF;
//# sourceMappingURL=C_NotaF.d.ts.map