declare class C_AgeAni extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Animais_Atendimento> {
    private servicosAgenda;
    private isTelaAgendaConsolidada;
    private isReagendamento;
    private empresa;
    private isPago;
    private tipoDesconto;
    readonly tab: MouraTabPanel;
    readonly EnvioSms: MouraSMS;
    readonly btnAvancarServico: MouraButton;
    readonly btnAvancarEncaminhamento: MouraButton;
    readonly btnAvancarUnidade: MouraButton;
    readonly btnCancelamento: MouraButton;
    readonly accUnidades: MouraAccordion;
    readonly accConfirmacao: MouraAccordion;
    readonly accServicos: MouraAccordion;
    readonly accCadastro: MouraAccordion;
    readonly accEncaminhamento: MouraAccordion;
    readonly accValores: MouraAccordion;
    Servico: SiSMoura.Core.Entity.ServicosAtendimento;
    Servicos: SiSMoura.Core.Entity.ServicosAtendimento[];
    Confirmacoes: SiSMoura.Core.Entity.AnimaisConfirmacaoAgendamentoRetorno[];
    Valor: SiSMoura.Core.Entity.ServicosAtendimento;
    Valores: SiSMoura.Core.Entity.ServicosAtendimento[];
    readonly grdServicos: MouraGridViewJSEditavel;
    readonly grdValores: MouraGridViewJSEditavel;
    readonly txtData: MouraTextBoxData;
    readonly txtServico: MouraTextBoxProcura;
    readonly cboEncaminhamento: MouraComboBox;
    readonly cboPreferencial: MouraComboBox;
    readonly cboEstado: MouraComboBox;
    readonly lblEmpresa: MouraLabel;
    readonly cboCidade: MouraComboBox;
    readonly cboOrdenacao: MouraComboBox;
    readonly cboPeriodo: MouraComboBox;
    readonly cboEmpresaEncaminhamento: MouraComboBoxEmpresa;
    readonly txtProfissionalEncaminhou: MouraTextBoxProcura;
    readonly txtVeterinarioExterno: MouraTextBoxProcura;
    readonly txtProfissionalPreferencial: MouraTextBoxProcura;
    readonly txtCodigo: MouraTextBoxProcura;
    readonly txtVeterinarioExternoEncaminhou: MouraTextBox;
    readonly txtCRMVVeterinario: MouraTextBox;
    readonly txtClinicaEncaminhou: MouraTextBox;
    readonly txtTelefoneContatoEncaminhou: MouraTextBox;
    readonly txtEmailEncaminhou: MouraTextBox;
    Encaminhamento: SiSMoura.Core.Entity.Animais_Atendimento_Encaminhamento;
    readonly DivEncaminhamento: HTMLElement;
    readonly btnVacinas: MouraButton;
    readonly dlgVacinasAgendadas: MouraModal;
    readonly dlgIG: MouraModal;
    readonly dlgProfissional: MouraModal;
    readonly grdAgendamentos: MouraGridViewJS;
    readonly grdAgendamentosPendentes: MouraGridViewJS;
    readonly grdProfissionais: MouraGridViewJS;
    readonly txtPet: MouraTextBoxProcuraProprietarioAnimal;
    readonly txtIG: MouraTextBox;
    readonly btnVoltarAgendamento: MouraButton;
    readonly btnOkIG: MouraButton;
    readonly agpCadastro: MouraAgrupamento;
    readonly agpServico: MouraAgrupamento;
    readonly agpEncaminhamento: MouraAgrupamento;
    readonly agpUnidade1: MouraAgrupamento;
    readonly agpUnidade2: MouraAgrupamento;
    readonly grdUnidades: MouraGridViewJS;
    readonly btnBuscar: MouraButton;
    readonly grdConfirmacao: MouraGridViewJS;
    readonly btnSolicitarAprovacao: MouraButton;
    readonly btnEstornarConvenio: MouraButton;
    readonly dvLegendaPlano: HTMLDivElement;
    readonly grdConsultas: MouraGridViewJS;
    readonly dlgConsultas: MouraModal;
    readonly btnImprimir: MouraButton;
    readonly dlgMotivoCancelamento: MouraModal;
    readonly btnConfirmarCancelamento: MouraButton;
    readonly btnCancelarCancelamento: MouraButton;
    readonly cboMotivoCancelamento: MouraComboBox;
    readonly txtMotivoCancelamento: MouraTextBox;
    readonly btnCancelarProfissional: MouraButton;
    readonly dlgMotivoExclusao: MouraModal;
    readonly btnConfirmarExclusao: MouraButton;
    readonly btnCancelarExclusao: MouraButton;
    readonly cboMotivoExclusao: MouraComboBox;
    readonly txtMotivoExclusao: MouraTextBox;
    private selecionouAgendamento;
    private perguntouAdicionarServicoDuplicado;
    private perguntouAdicionarProdutoDuplicado;
    private mostrouParticipantes;
    private mostrouConsulta;
    private mostrouFuncao;
    protected CorrigirTextoBotaoZanthus(): void;
    protected OnGerouCelulaGradeValores(s: any, e: MouraGridViewJSCellPreparedEventArgs): void;
    protected IsConvenioProprio(codConvenio: number): boolean;
    protected IsAtendimentoConvenio(): boolean;
    private _OcultouCliente;
    private _CRMVDigitado;
    protected Init(): void;
    protected OnClicouBotaoLinhaAgendamento(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnClickBotaoCancelar(s: MouraButton, e: MouraClickEventArgs): void;
    protected OnClickConfirmarProfissional(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickCancelarProfissional(s: MouraButton, e: MouraClickEventArgs): void;
    protected OnMotivoSelectedItemChanged(): void;
    protected OnMotivoExclusaoSelectedItemChanged(): void;
    protected OnClickCancelarCancelamento(s: MouraButton, e: MouraClickEventArgs): void;
    protected OnClickCancelarExclusao(s: MouraButton, e: MouraClickEventArgs): void;
    private _codAgendamento;
    protected OnClickConfirmarExclusao(s: MouraButton, e: MouraClickEventArgs): void;
    protected OnClickConfirmarCancelamento(s: MouraButton, e: MouraClickEventArgs): void;
    protected OnRespostaCancelarAtendimento(result: MsgBoxResultEventArgs): void;
    protected OnClickImprimir(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnGerouCelulaGradeServicos(s: any, e: MouraGridViewJSCellPreparedEventArgs): void;
    protected OnGrdServicosClickBotaoLinha(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnExcluindoItemServico(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected OnAdiciouItemValoresServico(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected OnLimpouItemServico(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected OncboPreferencialSelectedItemChanged(s: MouraComboBox, e: MouraEventArgs): void;
    protected OntxtCRMVVeterinarioTextChanged(): void;
    protected alterarEncaminhamento(tipo: string): void;
    protected VerificarElegibilidadePlano(codAnimal: number): void;
    protected OnAdiciouItemServico(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected AtualizarParametrosProfissional(): void;
    protected AdicionarValoresServicos(): void;
    private IniciarValoresAutomaticosServico;
    private retornoComplementosItemServico;
    private getRetornoComplementoItemServico;
    readonly Atendimento_Bloquear_Editar_ValorServico: boolean;
    protected AlterarColunasEditaveisVenda(editavel: boolean): void;
    protected AlterarCamposAtendimentoPago(isAtendimentopago: boolean): void;
    protected ServicoZerado(servico: number): boolean;
    protected OnValidandoItemServico(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected VerificarFuncaoAdmBloquearRetorno(retorno: MouraFuncoesAdministrativasRetorno): void;
    protected IsAtendimentoPago(codAtendimento: number): boolean;
    protected OnClickSolicitarConvenio(): void;
    protected OnValidandoItemValoresServico(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    private exibiuAlertaAlteracao;
    protected VerificaAutorizacaoPlano(item: SiSMoura.Core.Entity.ServicosAtendimento): void;
    protected OnItemExcluido(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected limparUnidade(): void;
    protected OnLabelLinkClick(ev: JQueryKeyEventObject): void;
    OnPageLoad(): void;
    protected OnTxtPetLimpouAnimal(): void;
    protected OnClickVacinas(s: MouraButton, e: MouraClickEventArgs): void;
    protected OnClickVoltarAgendamento(s: MouraButton, e: MouraClickEventArgs): void;
    protected OnClickbtnIg(s: MouraButton, e: MouraClickEventArgs): void;
    protected OnGrdAgendamentosClickBotaoLinha(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    private profissionalSelecionado;
    protected OnGrdProfissionaisClickBotaoLinha(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    private _mostrarMensagem;
    protected OnTxtPetProcurouAnimal(s: MouraTextBoxProcuraProprietarioAnimal, e: MouraEventArgs): void;
    protected atualizarAgendamentos(exibirMensagem: boolean): void;
    private alterarVisibleBotaoPendente;
    private codProfissional;
    private codEmpresa;
    private horarioForaEscala;
    private horaAtendimento;
    private horasAtendimento;
    protected confirmacaoAgenda(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnGridClicouBotao(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnSelecionouMSGBoxAgendamentos(e: MsgBoxResultEventArgs): void;
    protected OnTxtProfissionalEncaminhouProcurou(s: MouraTextBoxProcuraRetornoProcura, e: MouraEventArgs): void;
    protected OnTxtVeterinarioExternoProcurou(s: MouraTextBoxProcuraRetornoProcura, e: MouraEventArgs): void;
    protected AlterarVisibleEncaminhamento(value: boolean): void;
    protected HabilitarTipoEncaminhamento(tipo: string): void;
    protected ObrigarEncaminhamento(flag: boolean): void;
    protected OnTxtServicoProcurou(s: MouraTextBoxProcura, e: MouraEventArgs): void;
    protected AbrirIGServico(codServico: number, codAnimal: number, exibirNaoEncontrado: boolean): void;
    protected OnPesquisouProprietario(s: any, e: any): void;
    protected OnPesquisouPet(s: any, e: any): void;
    protected linhaAgendamento(): number;
    protected OnAdicionandoItemServico(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected habilitarCampos(flag: boolean): void;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Animais_Atendimento): void;
    protected OnBtnAvancarUnidadeClick(): void;
    protected OnBtnAvancarServicoClick(): void;
    protected OnBtnAvancarValoresClick(): void;
    protected OnBtnAvancarCadastroClick(): void;
    protected atualizarGrids(): void;
    protected OnBtnAvancarEncaminhamentoClick(): void;
    protected ExibirEncaminhamento(): void;
    private listaCidades;
    protected PreencherCidades(): void;
    protected OnGridCellPrepared(s: any, e: MouraGridViewJSCellPreparedEventArgs): void;
    protected verificarCamposPreenchidos(): boolean;
    protected criarGradeServicos(isPago: boolean): void;
    protected criarGradeValores(Entidade: SiSMoura.Core.Entity.Animais_Atendimento): void;
    protected CarregarServicosAgendamento(): void;
    protected RelacaoAgendaByServico(): void;
    protected RelacaoAgenda(): void;
    private AgendaByServico;
    GerarGradeUnidades(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected BuscarUnidadeSelecionada(): void;
    private isByServico;
    protected ConfigurarGrade(): void;
    protected FuncaoSort(data: any): any;
    protected FuncaoCustomText(data: any): string;
    private PreencherServicos;
    private adicionarCamposComputadosAtendimento;
    protected ValidarAntesGravar(agendamentoNaoFinalizado: boolean): boolean;
    protected OnAntesGravar(): boolean;
    protected VerificarVacinasPendentes(): void;
    protected VerificarEnviarSMSDepoisGravar(): void;
    protected OnDepoisGravar(): boolean;
    protected OnClicouBotaoLinhaServico(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnClicouBotaoLinhaServicoConfirmacao(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Animais_Atendimento): void;
    protected AlterarCamposUnidades(flag: boolean, empresa: string): void;
}
declare const c_AgeAni: C_AgeAni;
//# sourceMappingURL=C_AgeAni.d.ts.map