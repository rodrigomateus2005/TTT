declare class C_EntraAniOng extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Animais_Entrada_Adocao> {
    private enviarEmailEntrada;
    readonly hdnRacas: HTMLInputElement;
    readonly txtCodigo: MouraTextBoxProcura;
    ItemEntrada: SiSMoura.Core.Entity.Animais_Entrada_Adocao_Item;
    ItensEntrada: SiSMoura.Core.Entity.Animais_Entrada_Adocao_Item[];
    readonly gridItensEntrada: MouraGridViewJSEditavel;
    readonly cboRaca: MouraComboBox;
    readonly cboEspecie: MouraComboBox;
    readonly txtProprietario: MouraTextBoxProcura;
    readonly txtMicrochip: MouraTextBox;
    readonly lblSituacaoEntrada: MouraLabel;
    readonly btnCancelarEntrada: MouraButton;
    readonly dlgMotivoCancelamento: MouraModal;
    readonly txtMdlMotivoCanc: MouraTextBox;
    readonly btnMldMotivoCancConfirmar: MouraButton;
    readonly btnMldMotivoCancCancelar: MouraButton;
    readonly hndUsuarioAutorizouCancelamento: HTMLInputElement;
    readonly cboEmpresa: MouraComboBoxEmpresa;
    readonly cboBaiaAdocao: MouraComboBox;
    readonly txtDataEntrada: MouraTextBoxData;
    readonly txtUsuarioEntrada: MouraTextBoxProcura;
    readonly btnFinalizarEntrada: MouraButton;
    readonly btnEnviarEmailEntrada: MouraButton;
    protected Init(): void;
    private atualizarSituacaoEntrada;
    private OnCboEmpresaChanged;
    private preencherBaiasEmpresa;
    protected OnGridItensEntradaCellPrepared(s: any, e: MouraGridViewJSCellPreparedEventArgs): void;
    OnPageLoad(): void;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Animais_Entrada_Adocao): void;
    protected OnAntesDeletar(): boolean;
    protected OnAntesGravar(): boolean;
    protected OnDepoisBuscarExistente(Entity: SiSMoura.Core.Entity.Animais_Entrada_Adocao): boolean;
    protected OnLimpouItemEntrada(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected OnAdicionandoItemGridEntrada(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnValidandoItemGridEntrada(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnAlterandoItemGridEntrada(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnClickBotaoItemGrid(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): boolean;
    private onCboEspecieChange;
    private OnTxtProprietarioProcurou;
    private OnBtnCancelarEntradaClick;
    private onBtnMdlMotivoCancConfirmar;
    private onBtnMdlMotivoCancCancelar;
    private AVALIACAO_VETERINARIA_ENTRADA_ADOCAO;
    protected OnRetornouModalAvaliacaoVeterinarioEntradaAdocao(s: any, e: MouraTelaModalRetornouEventArgs): void;
    protected AbrirNovaAvaliacaoVeterinaria(codEntradaItem: number, codAvaliacaoItem: number, isVeterinario: boolean, codVeterinario?: number): void;
    protected OnGravouSucesso(): void;
    protected OnDepoisGravar(): boolean;
    private getListUlHtml;
    private habilitarDesabilitar;
    private habilitarDesabilitarGridEntrada;
    private aprovarEntrada;
    private EnviarEmailEntrada;
    private OnBtnEnviarEmailEntradaClick;
    private OnBtnFinalizarEntradaClick;
}
declare var c_EntraAniOng: C_EntraAniOng;
//# sourceMappingURL=C_EntraAniOng.d.ts.map