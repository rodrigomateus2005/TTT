declare class C_TipoPlan extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Animais_Plano_Saude> {
    private listaPrecos;
    private codServ;
    Servicos: SiSMoura.Core.Entity.Animais_Plano_Saude_Servicos[];
    Servico: SiSMoura.Core.Entity.Animais_Plano_Saude_Servicos;
    Pontuacao: any;
    Pontuacoes: any[];
    DescontosServico: SiSMoura.Core.Entity.Animais_Plano_Saude_Descontos[];
    Descontos: SiSMoura.Core.Entity.Animais_Plano_Saude_Descontos[];
    Desconto: SiSMoura.Core.Entity.Animais_Plano_Saude_Descontos;
    readonly cboListaPreco: MouraComboBox;
    readonly cboRaca: MouraComboBox;
    readonly cboScore: MouraComboBox;
    readonly grdServicos: MouraGridViewJSEditavel;
    readonly grdPontuacao: MouraGridViewJSEditavel;
    readonly grdDescontos: MouraGridViewJSEditavel;
    readonly Grid: MouraGridViewJS;
    readonly txtServico: MouraTextBoxProcura;
    readonly cboTipoValor: MouraComboBox;
    readonly txtValorCoparticipacao: MouraTextBox;
    readonly cboTipoPlano: MouraComboBox;
    readonly txtPorcentagemDesconto: MouraTextBox;
    readonly tpPrincipal: MouraTabPanel;
    readonly mdDesconto: MouraModal;
    readonly btnOkDesc: MouraButton;
    readonly btnCancelarDesc: MouraButton;
    readonly txtEspecies: MouraTextBoxProcuraComLista;
    readonly lstEmpresa: MouraListBoxEmpresa;
    readonly cboNivelAutorizacao: MouraComboBox;
    readonly chkApenasFilhotes: MouraCheckBox;
    readonly txtLimiteDiasCompra: MouraTextBox;
    readonly txtParcelasDescontar: MouraTextBox;
    readonly cboTipoFilhote: MouraComboBox;
    readonly txtIdadeMaxima: MouraTextBox;
    protected Init(): void;
    protected OnCheckApenasFilhotes(): void;
    protected OnFechouModal(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickBotaoOk(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnClickBotaoFechar(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected OnGridClicouBotao(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnClickDesconto(codServico: number): boolean;
    protected OnValidandoPontuacao(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnValidandoItemDesconto(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnValidandoItemServico(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected VerificaExistenciaServico(codServico: number): boolean;
    protected OnCboListaPrecoGotFocus(s: any, e: any): void;
    protected OnGridSelecionouItem(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs): void;
    protected OnTxtServicoProcurou(s: MouraTextBoxProcura, e: MouraEventArgs): void;
    OnPageLoad(): void;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Animais_Plano_Saude): void;
    protected LimparPontuacao(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected ValidarIntervaloPontuacao(pontuacaoInicial: number, pontuacaoFinal: number, idadeInicial: number, idadeFinal: number, contador: number, existentes: string): boolean;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Animais_Plano_Saude): void;
    protected CarregarEspecies(especies: SiSMoura.Core.Entity.Animais_Plano_Saude_Especie[]): void;
    protected CarregarEmpresas(empresas: SiSMoura.Core.Entity.Animais_Plano_Saude_Empresa[]): void;
    protected PreencherEspecies(): SiSMoura.Core.Entity.Animais_Plano_Saude_Especie[];
    protected PreencherEmpresas(): SiSMoura.Core.Entity.Animais_Plano_Saude_Empresa[];
    protected OnALterouTipo(): void;
    protected AlterarVisibleTipoValor(entity: SiSMoura.Core.Entity.Animais_Plano_Saude): void;
    protected OnAntesGravar(): boolean;
    protected OnDepoisGravar(): boolean;
    protected PreencherGrade(): void;
    protected OnLimpandoItemServico(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
}
declare const c_TipoPlan: C_TipoPlan;
//# sourceMappingURL=C_TipoPlan.d.ts.map