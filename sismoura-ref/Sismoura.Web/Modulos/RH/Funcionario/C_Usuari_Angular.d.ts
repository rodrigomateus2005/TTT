declare class C_Usuari_Angular extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Usuario> {
    readonly chkFranqueado: MouraCheckBox;
    readonly chkFranqueador: MouraCheckBox;
    readonly chkAutonomo: MouraCheckBox;
    readonly chkContador: MouraCheckBox;
    readonly chkSocio: MouraCheckBox;
    readonly mdMensagem: MouraModal;
    readonly txtMensagem: MouraTextBox;
    readonly btnOK: MouraButton;
    CursosUsuario: SiSMoura.Core.Entity.Curso_Usuario[];
    CursoUsuario: SiSMoura.Core.Entity.Curso_Usuario;
    ZonaVendas: SiSMoura.Core.Entity.Usuario_Zonavenda[];
    ZonaVenda: SiSMoura.Core.Entity.Usuario_Zonavenda;
    HorariosFuncionario: SiSMoura.Core.Entity.Rh_Funcionario_Horario[];
    HorarioFuncionario: SiSMoura.Core.Entity.Rh_Funcionario_Horario;
    readonly txtNome: MouraTextBox;
    readonly txtSenhaAtual: MouraTextBox;
    readonly txtNovaSenha: MouraTextBox;
    readonly txtSenhaConfirmada: MouraTextBox;
    readonly txtSalarioContratual: MouraTextBox;
    readonly imgUsuario: MouraFotosPastaJS;
    readonly lstGrupoUsuario: MouraCheckBoxList;
    readonly lstEmpresa: MouraListBoxEmpresa;
    readonly hdnPathImgs: HTMLInputElement;
    readonly cboSituacao: MouraComboBox;
    readonly cboSexo: MouraComboBox;
    readonly cboEstadoCivil: MouraComboBox;
    readonly cboDepositoPadrao: MouraComboBox;
    readonly cboDeficiencia: MouraComboBox;
    readonly cboRacaCor: MouraComboBox;
    readonly cboTipoTribSindical: MouraComboBox;
    readonly cboFormaPag: MouraComboBox;
    readonly cboTipoContrato: MouraComboBox;
    readonly cboTipoContaBancaria: MouraComboBox;
    readonly cboVinculoEmpregaticio: MouraComboBox;
    readonly cboGrauInstrucao: MouraComboBox;
    readonly cboCodigoAdmissao: MouraComboBox;
    readonly cboUF_CTPS: MouraComboBox;
    readonly cboSituacaoCurso: MouraComboBox;
    readonly cboOrgaoEmissorCNH: MouraComboBox;
    readonly cboEmpresaContratual: MouraComboBoxEmpresa;
    readonly cboDiaSemana: MouraComboBox;
    readonly txtCep: MouraTextBoxCep;
    readonly btnSenha: MouraButton;
    readonly btnCancelarSenha: MouraButton;
    readonly btnConfirmarSenha: MouraButton;
    readonly btnApagarSenha: MouraButton;
    readonly mdSenha: MouraModal;
    readonly txtZonaVenda: MouraTextBoxProcura;
    readonly txtDataCurso: MouraTextBoxData;
    readonly txtDataCadastro: MouraTextBoxData;
    readonly GridZonaVenda: MouraGridViewJSEditavel;
    readonly GridCursos: MouraGridViewJSEditavel;
    readonly GridHorarioFunc: MouraGridViewJSEditavel;
    readonly txtBanco: MouraTextBoxProcura;
    readonly txtNomeBanco: MouraTextBoxProcura;
    private codigos;
    private codigosGrupoUsuario;
    private verificadoAutorizacao;
    protected Init(): void;
    OnPageLoad(): void;
    protected OnCheckBoxSelectedIndexChangedAutonomo(): void;
    protected VerificaCheckBoxAutonomo(): void;
    protected OnCheckBoxSelectedIndexChangedContador(): void;
    protected AdicionarEventosPagina(): void;
    protected MostrarModalMensagem(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected ONClickOK(s: MouraButton, e: MouraClickEventArgs): void;
    protected CamposPreenchidos(entity: SiSMoura.Core.Entity.Usuario): void;
    protected OnLimpouItemCurso(s: any, e: MouraGridViewJSEditavelItemEventArgs): void;
    protected AtualizarImgFuncionario(Entity: SiSMoura.Core.Entity.Usuario): void;
    protected OnAntesGravar(): boolean;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Usuario): void;
    protected OnConsultarBanco(): void;
    protected OnDepoisGravar(): boolean;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Usuario): void;
    protected PreencherEmpresas(empresas: SiSMoura.Core.Entity.Usuario_Empresa[]): void;
    protected PreencherGruposUsuario(grupos: SiSMoura.Core.Entity.Usuario_Grupo[]): void;
    protected OnClickConfirmarSenha(s: MouraButton, e: MouraClickEventArgs): boolean;
    protected VerificaLetra(senha: any): boolean;
    protected OnClickApagarSenha(s: MouraButton, e: MouraClickEventArgs): void;
    protected VerificarAutorizacao(retorno: MouraFuncoesAdministrativasRetorno): boolean;
    protected ApagarSenhaUsuario(result: MsgBoxResultEventArgs): void;
    protected OnClickSenha(s: MouraButton, e: MouraClickEventArgs): void;
    protected OnClickCancelarSenha(s: MouraButton, e: MouraClickEventArgs): void;
    protected LimparSenha(): void;
    protected OnConsultarCEP(s: any, e: MouraTextBoxCepPesquisouEventArgs): void;
    protected OnClickIncluirZonaVenda(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    protected OnClickIncluirCurso(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    protected OnClickIncluirHorarioFunc(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
}
declare var c_Usuari_Angular: C_Usuari_Angular;
//# sourceMappingURL=C_Usuari_Angular.d.ts.map