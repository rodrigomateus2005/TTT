declare class C_ManVen extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Venda> {
    readonly grd: MouraGridViewJSEditavel;
    readonly tab: MouraTabPanel;
    readonly txtCodigo: MouraTextBoxProcura;
    readonly txtDataVenda: MouraTextBoxData;
    readonly txtHora: MouraTextBoxHora;
    readonly txtDesconto: MouraTextBox;
    readonly txtAcrescimo: MouraTextBox;
    readonly txtAcrescimoPor: MouraTextBox;
    readonly txtTotalVenda: MouraTextBox;
    readonly txtVendedor: MouraTextBoxProcura;
    readonly txtCliente: MouraTextBoxProcura;
    readonly txtDescontoPor: MouraTextBox;
    readonly txtRecebido: MouraTextBox;
    readonly txtValorFinal: MouraTextBox;
    readonly lstTipoCliente: MouraRadioButtonList;
    VendaItens: SiSMoura.Core.Entity.VendaItemWebRetorno[];
    VendaItem: SiSMoura.Core.Entity.VendaItemWebRetorno;
    readonly cboEcf: MouraComboBox;
    readonly cboTipoImpressao: MouraComboBox;
    readonly txtCOO: MouraTextBox;
    readonly txtCNPJ: MouraTextBox;
    readonly txtCPF: MouraTextBox;
    readonly txtItem: MouraTextBox;
    readonly txtDataCupom: MouraTextBoxData;
    readonly txtHoraCupom: MouraTextBoxHora;
    readonly txtProduto: MouraTextBoxProcura;
    readonly txtQtde: MouraTextBox;
    readonly txtUnitario: MouraTextBox;
    readonly txtTotal: MouraTextBox;
    readonly txtObservacao: MouraTextBox;
    readonly cboFormaPagamento: MouraComboBox;
    readonly txtParcelaCrediario: MouraTextBox;
    readonly txtVencimentoCrediario: MouraTextBoxData;
    readonly txtValorCrediario: MouraTextBox;
    readonly cboDocBancario: MouraComboBox;
    readonly cboConta: MouraComboBox;
    readonly grdCrediario: MouraGridViewJSEditavel;
    readonly txtParcelaParcelamento: MouraTextBox;
    readonly txtDiasVencimento: MouraTextBox;
    readonly txtVencimentoInicial: MouraTextBoxData;
    readonly optDias: MouraRadioButtonList;
    readonly txtDias: MouraTextBox;
    readonly txtDia: MouraTextBox;
    readonly grdParcelamento: MouraGridViewJSEditavel;
    readonly cboCDC: MouraComboBox;
    readonly cboParcelaTaxas: MouraComboBox;
    readonly txtParcela: MouraTextBox;
    readonly txtVencimento: MouraTextBoxData;
    readonly txtValorParcela: MouraTextBox;
    readonly grdCDC: MouraGridViewJSEditavel;
    readonly grdCartao: MouraGridViewJSEditavel;
    readonly txtCodigoCheque: MouraTextBox;
    readonly cboTipoCheque: MouraComboBox;
    readonly txtDataCheque: MouraTextBoxData;
    readonly txtCNPJCheque: MouraTextBox;
    readonly txtCPFCheque: MouraTextBox;
    readonly txtValorCheque: MouraTextBox;
    readonly txtBanco: MouraTextBox;
    readonly txtAgencia: MouraTextBox;
    readonly txtConta: MouraTextBox;
    readonly txtNCheque: MouraTextBox;
    readonly txtClienteCheque: MouraTextBox;
    readonly txtNomeTitular: MouraTextBox;
    readonly txtTelefoneTitular: MouraTextBox;
    readonly txtEnderecoTitular: MouraTextBox;
    readonly grdCheque: MouraGridViewJSEditavel;
    readonly cboCartao: MouraComboBox;
    readonly txtValorCartao: MouraTextBox;
    readonly txtValorCDC: MouraTextBox;
    readonly txtValorDinheiro: MouraTextBox;
    readonly txtValorTicket: MouraTextBox;
    readonly grdDinheiro: MouraGridViewJSEditavel;
    readonly grdTicket: MouraGridViewJSEditavel;
    Crediarios: SiSMoura.Core.Entity.Venda_Pagamento[];
    Parcelamentos: SiSMoura.Core.Entity.Venda_Pagamento[];
    ListaCDC: SiSMoura.Core.Entity.Venda_Pagamento[];
    Cartoes: SiSMoura.Core.Entity.CartaoManutencaoVendaRetorno[];
    Cheques: SiSMoura.Core.Entity.Cheques[];
    Dinheiros: SiSMoura.Core.Entity.Venda_Pagamento[];
    Tickets: SiSMoura.Core.Entity.Venda_Pagamento[];
    readonly hdnEmpresasPermitidasUsuario: HTMLInputElement;
    readonly hdnTotalPendente: HTMLInputElement;
    readonly mdImportarVendas: MouraModal;
    readonly btnImportarVendas: MouraButton;
    readonly btnGerarVendas: MouraButton;
    readonly txtPeriodo: MouraTextBoxPeriodo;
    readonly txtProdutoVenda: MouraTextBoxProcura;
    readonly txtValorVenda: MouraTextBox;
    readonly chkBuscar_Valor: MouraCheckBox;
    readonly grdVendas: MouraGridViewJS;
    private verificaAutorizacaoPrograma;
    protected Init(): void;
    protected OnLimparCampos(): void;
    protected OnSelecionarCDC(): void;
    protected OnSelecionarFormaPagamento(): void;
    protected OnChangeValorCartao(): boolean;
    protected OnKeyDownValorDinheiro(e: any): void;
    protected OnKeyDownValorTicket(e: any): void;
    protected OnKeyDownValorCheque(e: any): void;
    protected respontaCDC(e: MsgBoxResultEventArgs): void;
    protected OnAdicionandoItemCrediario(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
    protected OnAdicionandoItemCDC(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
    protected OnAdicionandoItemCheque(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
    protected OnAdicionandoItemDinheiro(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
    protected OnAdicionandoItemTicket(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
    protected OnAdicionandoItemCartao(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
    protected OnSelecionarParcelaTaxas(): boolean;
    OnSelecionouLinhaImportarVenda(s: any, e: MouraGridViewJSClickBotaoLinhaEventArgs, eModal: MouraEventHandler): void;
    protected OnGravouSucesso(s: any, e: MouraGravouSucessoEventArgs): void;
    protected OnAlterandoItem(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
    protected OnProcurouCliente(): boolean;
    protected OnProcurouClienteCheque(): boolean;
    protected OnAbriuProcuraCliente(): void;
    protected VerificaAutorizacaoPrograma(retorno: MouraFuncoesAdministrativasRetorno): boolean;
    protected OnSelecionarTipoCliente(): void;
    protected OnSelecionarTipoCheque(): void;
    protected OnChangeAcrescimoP(): boolean;
    protected OnChangeParcelaCDC(): boolean;
    protected OnChangeParcelaCrediario(): boolean;
    protected OnChangeDescontoPor(): boolean;
    protected OnChangeAcrescimo(): boolean;
    protected OnChangeCOO(): boolean;
    protected OnChangeDesconto(): boolean;
    protected OnAntesGravar(): boolean;
    private PreencherCartao;
    private PreencherVendaItem;
    protected OnClickExcluirVendaItens(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected CalcularTotal(): void;
    protected OnValidandoItem(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected OnAdicionandoItem(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
    protected OnProcurouProduto(): boolean;
    protected OnChangeQuantidade(): boolean;
    protected OnChangeRecebido(): boolean;
    protected OnChangeTotal(): boolean;
    protected OnChangeUnitario(): boolean;
    protected VerificaProdutoControlado(codProduto: any): boolean;
    protected MostrarModalImpVendas(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected GerarVendas(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): boolean;
    protected OnFechouMdImportarVendas(s: any, e: MouraEventHandler): void;
    protected OnAntesBuscarExistente(): boolean;
    protected LimparEntity(): void;
    protected PreencherFormaPagamento(codVenda: any): void;
    protected LimparModalImpVendas(): void;
    protected CalcularTotalPendente(): void;
    protected RetornarTotalInformado(): number;
    protected Habilita(flag: any, flagEnabled: any): void;
    protected OnClickExcluirCrediario(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
    protected OnClickExcluirCDC(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): boolean;
}
declare var c_ManVen: C_ManVen;
//# sourceMappingURL=C_ManVen.d.ts.map