declare class C_Orcame extends MouraPageCadastroAngular<SiSMoura.Core.Entity.Orcamento> {
    Produtos: SiSMoura.Core.Entity.OrcamentoItemRetorno[];
    OrcamentoItens: SiSMoura.Core.Entity.Orcamento_Item[];
    Pagamentos: SiSMoura.Core.Entity.PagamentoRetorno[];
    ContasReceber: SiSMoura.Core.Entity.Contas_Receber[];
    Cheques: SiSMoura.Core.Entity.Orcamento_Cheques[];
    Tickets: SiSMoura.Core.Entity.ValorPagamentoRetorno[];
    Dinheiros: SiSMoura.Core.Entity.ValorPagamentoRetorno[];
    Cartoes: SiSMoura.Core.Entity.Orcamento_Cartao[];
    TipoOrcamentoInfo: SiSMoura.Core.Entity.TipoOrcamentoInfoRetorno;
    Cliente: SiSMoura.Core.Entity.OrcamentoClienteRetorno;
    ContaReceber: SiSMoura.Core.Entity.Contas_Receber;
    Produto: SiSMoura.Core.Entity.OrcamentoItemRetorno;
    Cheque: SiSMoura.Core.Entity.Orcamento_Cheques;
    Cartao: SiSMoura.Core.Entity.Orcamento_Cartao;
    OrcamentoItem: SiSMoura.Core.Entity.Orcamento_Item;
    Pagamento: SiSMoura.Core.Entity.PagamentoRetorno;
    Ticket: SiSMoura.Core.Entity.ValorPagamentoRetorno;
    Dinheiro: SiSMoura.Core.Entity.ValorPagamentoRetorno;
    Crediarios: SiSMoura.Core.Entity.Orcamento_Pagamento[];
    Crediario: SiSMoura.Core.Entity.Orcamento_Pagamento;
    readonly grdCartao: MouraGridViewJS;
    readonly grdProduto: MouraGridViewJSEditavel;
    readonly grdPagamentos: MouraGridViewJS;
    readonly tabPagamento: MouraTabPanel;
    readonly grdDinheiro: MouraGridViewJS;
    readonly grdTicket: MouraGridViewJS;
    readonly grdCrediario: MouraGridViewJS;
    readonly grdCheque: MouraGridViewJS;
    readonly mdProdutos: MouraModal;
    readonly txtProduto: MouraTextBoxProcura;
    readonly cboDeposito: MouraComboBox;
    readonly cboDocBancario: MouraComboBox;
    readonly cboTipoEntrega: MouraComboBox;
    readonly optTipo: MouraRadioButtonList;
    readonly cboEmpresa: MouraComboBox;
    readonly cboPlaca: MouraComboBox;
    readonly mdPagamento: MouraModal;
    readonly txtDescontoR: MouraTextBox;
    readonly txtDescontoP: MouraTextBox;
    readonly txtHoraEntrega: MouraTextBoxHora;
    readonly txtHora: MouraTextBoxHora;
    readonly txtSubTotal: MouraTextBox;
    readonly txtTotalProdutos: MouraTextBox;
    readonly txtValor: MouraTextBox;
    readonly txtNome_Produto: MouraTextBox;
    readonly txtCPF: MouraTextBoxCPF;
    readonly txtNCheque: MouraTextBox;
    readonly cboUndConvert: MouraComboBox;
    readonly cboListaPreco: MouraComboBox;
    readonly cboCartao: MouraComboBox;
    readonly txtUndQtde: MouraTextBox;
    readonly txtUndUnitario: MouraTextBox;
    readonly txtPedCompNum: MouraTextBox;
    readonly txtPedCompItem: MouraTextBox;
    readonly txtQuantidade: MouraTextBox;
    readonly cboUndImprimir: MouraComboBox;
    readonly txtMargem: MouraTextBox;
    readonly txtPrecoCusto: MouraTextBox;
    readonly txtPrecoCustoValor: MouraTextBox;
    readonly txtLargura: MouraTextBox;
    readonly txtProfundidade: MouraTextBox;
    readonly txtAltura: MouraTextBox;
    readonly cboDependente: MouraComboBox;
    readonly cboLote: MouraComboBox;
    readonly cboFormaPagamento: MouraComboBox;
    readonly cboContaCorrente: MouraComboBox;
    readonly cboSituacao: MouraComboBox;
    readonly txtPorcComissao: MouraTextBox;
    readonly txtValorComissao: MouraTextBox;
    readonly txtDescUnitario: MouraTextBox;
    readonly txtDescPorcentagem: MouraTextBox;
    readonly lblUnitarioDescInf: MouraLabel;
    readonly lblTotalDescInf: MouraLabel;
    readonly lblZonaVenda: MouraLabel;
    readonly lblObsEnd: MouraLabel;
    readonly lblCarga: MouraLabel;
    readonly lblZonaEntrega: MouraLabel;
    readonly btnRecalcular: MouraButton;
    readonly txtAcrescimoR: MouraTextBox;
    readonly txtParcela: MouraTextBox;
    readonly txtValorCrediario: MouraTextBox;
    readonly txtQtdeFatorial: MouraTextBox;
    readonly txtQtdePeso: MouraTextBox;
    readonly txtPesoUnit: MouraTextBox;
    readonly txtPesoTotal: MouraTextBox;
    readonly lblCadastradoPor: MouraLabel;
    readonly lblAlteradoPor: MouraLabel;
    readonly lblSaldoDevedor: MouraLabel;
    readonly lblVenda: MouraLabel;
    readonly lblSaldo: MouraLabel;
    readonly lblCredito: MouraLabel;
    readonly txtCliente: MouraTextBoxProcura;
    readonly txtTransportadora: MouraTextBoxProcura;
    readonly txtVendaPrecoCusto: MouraTextBox;
    readonly txtDocMercantil: MouraTextBox;
    readonly txtTotalCrediario: MouraTextBox;
    readonly txtValorCreditoUtilizado: MouraTextBox;
    readonly txtEstoque: MouraTextBox;
    readonly txtEstoqueTotal: MouraTextBox;
    readonly txtComissionado: MouraTextBox;
    readonly lblDataSituacao: MouraLabel;
    readonly lblUltimoOrcamento: MouraLabel;
    Transportadoras: SiSMoura.Core.Entity.TransportadoraRetorno[];
    Transportadora: SiSMoura.Core.Entity.TransportadoraRetorno;
    readonly btnImprimirOrcamento: MouraButton;
    readonly txtClienteCheque: MouraTextBoxProcura;
    readonly txtVendedor: MouraTextBoxProcura;
    readonly txtNomeCliente: MouraTextBox;
    readonly txtEnderecoEntrega: MouraTextBox;
    readonly txtBairroEntrega: MouraTextBox;
    readonly txtCidadeEntrega: MouraTextBoxProcura;
    readonly txtFone: MouraTextBox;
    readonly txtMarkupOrcamentoR: MouraTextBox;
    readonly txtVencimentoCrediario: MouraTextBoxData;
    readonly txtMarkupOrcamentoP: MouraTextBox;
    readonly txtTotalProd: MouraTextBox;
    private verificarAutorizacaoLimiteCrediarioCliente;
    private verificarAutorizacaoDescontoPorcentagem;
    private conceito;
    private retornoIssMaiorQue;
    private totalProdutos;
    private totalPendente;
    private codConsigImportado;
    protected Init(): void;
    OnPageLoad(): void;
    protected CalcularInfComissao(): void;
    protected CalcularInfComissaoPorcentagem(): void;
    protected CalcularInfoAcrescimo(): void;
    protected OnDepositoEmpresa(): void;
    protected OnVencimentoCrediario(): void;
    protected OnVerificaVendedor(): void;
    protected OnEstoqueProduto(): void;
    protected OnDepoisLimpar(Entity: SiSMoura.Core.Entity.Orcamento): void;
    protected OnExcluindoProduto(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    private situacaoOrcamento;
    protected SituacaoOrcamento(): boolean;
    protected CalcularInfoProduto(): void;
    protected CalcularInfoProdutoDesc(): boolean;
    protected CalcularInfoProdutoDescPorcentagem(): boolean;
    private validouAutorizacaoDescPromocao;
    protected Validar_Permissao_Desconto_Produto_Promocao(): boolean;
    private isProdutoEmPromocao;
    protected IsProdutoEmPromocao(): boolean;
    protected CalcularInfoDesc(): void;
    protected CalcularInfoDescPorcentagem(): void;
    protected Desconto_Com_Promocao(): void;
    protected OnPesquisouChequeTipo(): void;
    protected CalcularInfoQtd(): void;
    protected ConverterProduto(): void;
    protected OnAntesGravar(): boolean;
    protected ClienteBloquearCrediarioVerifAtual(): boolean;
    protected OnDescontoPorcentagem(result: MsgBoxResultEventArgs): void;
    protected OnUtilizarCredito(result: MsgBoxResultEventArgs): boolean;
    private diferencaTotalOrcamento;
    protected VerificaTotalPagamento(): boolean;
    protected OnLimiteCreditoCliente(result: MsgBoxResultEventArgs): boolean;
    protected VerificarAutorizacaoLimiteCrediarioCliente(retorno: MouraFuncoesAdministrativasRetorno): void;
    protected VerificarAutorizacaoDescontoPorcentagem(retorno: MouraFuncoesAdministrativasRetorno): void;
    protected OnOrcamentoZerado(result: MsgBoxResultEventArgs): boolean;
    protected OnDepoisGravar(): boolean;
    protected OnAntesDeletar(): boolean;
    protected OnPesquisouTransportadoraPlaca(): void;
    protected OnPesquisouCliente(): void;
    protected OnDepoisBuscarExistente(Entidade: SiSMoura.Core.Entity.Orcamento): void;
    protected CalculaMargemOrcamento(isDescReais?: boolean, isDescPorc?: boolean): void;
    protected CalcularTotalOrcamento(entity: SiSMoura.Core.Entity.Orcamento): void;
    protected OnClickBotaoAbrirProduto(): void;
    protected OnClickBotaoFecharProduto(): void;
    protected OnPesquisouProduto(s: any, e: any): boolean;
    protected OnClickAdicionarProdutoGrid(): boolean;
    protected OnValidandoProdutoGrade(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    protected OnAdicionandoProdutoGrade(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): void;
    protected OnLimpandoItemProduto(s: any, e: MouraGridViewJSEditavelItemCancelavelEventArgs): void;
    protected OnAdicionouProdutoGrade(s: any, e: any): void;
    protected OnClickBotaoAbrirPagamento(): boolean;
    protected OnClickBotaoFecharPagamento(): void;
    protected OnClickBotaoIncluiPagamento(): void;
    protected OrcamentoPagamentos(): void;
    protected OnClickIncluirCartao(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    protected OnClickIncluirCrediario(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    protected OnClickIncluirCheque(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    protected OnClickIncluirDinheiro(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    protected OnClickIncluirTicket(s: any, e: MouraGridViewJSEditavelItemValidandoEventArgs): boolean;
    private verificadoAutorizacao;
    protected VerificarAutorizacao(retorno: MouraFuncoesAdministrativasRetorno): void;
    private verificadoAutorizacaoOrcFP;
    protected VerificarAutorizacaoOrcFP(retorno: MouraFuncoesAdministrativasRetorno): void;
    private verificadoAutorizacaoPag;
    protected VerificarAutorizacaoPag(retorno: MouraFuncoesAdministrativasRetorno): void;
    private verificadoAutorizacaoMarcado;
    protected VerificarAutorizacaoMarcado(retorno: MouraFuncoesAdministrativasRetorno): void;
    private verificarAutorizacaoSituacaiChequeCliente;
    protected VerificarAutorizacaoSituacaiChequeCliente(retorno: MouraFuncoesAdministrativasRetorno): void;
    protected RetornaValorCreditoCliente(codCliente: any, modulo: any): void;
    protected LimparCamposCliente(): void;
    protected verificaConvenioCliente(): void;
    protected verificaTransportadora(clienteTransportadora: any): void;
    protected verificaVendedor(vendedor: any): void;
    protected calculaSaldoDevedor(): void;
    protected ultimoOrcamento(): void;
    protected VerificaAutorizacao(): void;
    retornoCliente(): void;
    protected OnClienteObs(result: MsgBoxResultEventArgs): void;
    protected OnSelecionouOpcaoClienteVendaPrecoCusto(result: MsgBoxResultEventArgs): void;
    protected OnSelecionouOpcaoVendedorCliente(result: MsgBoxResultEventArgs): void;
    protected OnSelecionouOpcaoCrediarioDataIgual(result: MsgBoxResultEventArgs): void;
    protected OnSelecionouOpcaoCrediarioDataMenor(result: MsgBoxResultEventArgs): boolean;
    protected OnLimparCliente(result: MsgBoxResultEventArgs): void;
    protected VerificaAutorizacaoVendedor(): void;
    protected RetornarTotalInformado(calcularTotalInformado: any): number;
    protected CalcularTotalPendente(): number;
    protected FormaPagamento(codPamgamento: any): void;
    protected OnClickImprimirOrcamento(s: any, e: DevExpress.Web.Scripts.ASPxClientButtonClickEventArgs): void;
    protected Imprimir(codOrcamento: number, codModelo: number): void;
    OnPesquisouChequeCliente(): void;
    protected consultarCPF(): void;
    protected OnClicouOKMsgBoxCPFInvalido(resultado: MsgBoxResultEventArgs): void;
}
declare const c_Orcame: C_Orcame;
//# sourceMappingURL=C_Orcame.d.ts.map